<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>贺龙飞的知识库</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-11T07:17:01.447Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>贺龙飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TCP/IP 协议</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/tcp-ip-%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/技术之路/计算机网络/tcp-ip-协议/</id>
    <published>2017-11-11T03:00:00.000Z</published>
    <updated>2017-11-11T07:17:01.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>指代整个协议族；由两个重要的协议：传输层的 <strong>TCP协议</strong> 和网络层的 <strong>IP协议</strong> 组成。</p><h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><h2 id="TCP-协议"><a href="#TCP-协议" class="headerlink" title="TCP 协议"></a>TCP 协议</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><blockquote><p>TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议，由IETF的RFC 793定义</p></blockquote><h3 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h3><p><img src="/images/2017/11/tcp-transfer.png" alt="tcp-transfer"></p><h4 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h4><p><strong>WHY</strong></p><blockquote><p><strong>为什么要三次握手？</strong><br>为了防止已失效的客户端连接请求突然又传送到了服务端，若没有客户端确认，则会占用服务端的资源。</p></blockquote><p><strong>HOW</strong></p><p><img src="/images/2017/11/tcp-三次握手.png" alt="tcp 三次握手"></p><table><thead><tr><th>客户端</th><th>传输</th><th>服务端</th></tr></thead><tbody><tr><td>SYN(x)</td><td>-&gt;</td><td>SYN(x)</td></tr><tr><td>SYN(y)-ACK(x+1)</td><td>&lt;-</td><td>SYN(y)+ACK(x+1)</td></tr><tr><td>ACK(y+1)</td><td>-&gt;</td><td>ACK(Y+1)</td></tr></tbody></table><blockquote><p>必须是客户端发起的SYN</p></blockquote><p>SYN: 同步序列编号（Synchronize Sequence Numbers）<br>ACK: 确认编号（Acknowledgement Number）</p><h4 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h4><p><strong>WHY</strong></p><blockquote><p><strong>为什么要四次挥手？</strong><br>全双工通信，所以必须双方都确认 FIN 才可以关闭连接</p></blockquote><p><strong>HOW</strong></p><p><img src="/images/2017/11/tcp-四次挥手.png" alt="tcp-四次挥手"></p><table><thead><tr><th>客户端</th><th>传输</th><th>服务端</th></tr></thead><tbody><tr><td>FIN(客户端传输完毕)</td><td>-&gt;</td><td>FIN</td></tr><tr><td>ACK</td><td>&lt;-</td><td>ACK（先确认）</td></tr><tr><td>FIN</td><td>&lt;-</td><td>FIN （服务端传输完毕）</td></tr><tr><td>ACK</td><td>-&gt;</td><td>ACK</td></tr></tbody></table><blockquote><p>客户端、服务端都可以发起 FIN</p></blockquote><p>FIN: 数据传输完毕 (Finsh)</p><h3 id="包头结构"><a href="#包头结构" class="headerlink" title="包头结构"></a>包头结构</h3><table><thead><tr><th>名称</th><th>长度</th></tr></thead><tbody><tr><td>源端口</td><td>16位</td></tr><tr><td>目标端口</td><td>16位</td></tr><tr><td>序列号</td><td>32位</td></tr><tr><td>回应序号</td><td>32位</td></tr><tr><td>TCP头长度</td><td>4位</td></tr><tr><td>reserved</td><td>6位</td></tr><tr><td>控制代码</td><td>6位</td></tr><tr><td>窗口大小</td><td>16位</td></tr><tr><td>偏移量</td><td>16位</td></tr><tr><td>校验和</td><td>16位</td></tr><tr><td>选项</td><td>32位(可选)</td></tr></tbody></table><blockquote><p>TCP包头的最小长度，为20字节。</p></blockquote><h2 id="UDP-协议"><a href="#UDP-协议" class="headerlink" title="UDP 协议"></a>UDP 协议</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>一种无连接的传输层协议；可靠性通过「应用层」保证。</p><h3 id="数据传输-1"><a href="#数据传输-1" class="headerlink" title="数据传输"></a>数据传输</h3><p>不提供数据包分组、组装和不能对数据包进行排序</p><h3 id="包头结构-1"><a href="#包头结构-1" class="headerlink" title="包头结构"></a>包头结构</h3><table><thead><tr><th>名称</th><th>长度</th></tr></thead><tbody><tr><td>源端口</td><td>16位</td></tr><tr><td>目的端口</td><td>16位</td></tr><tr><td>长度</td><td>16位</td></tr><tr><td>校验和</td><td>16位</td></tr></tbody></table><blockquote><p>UDP包头只有8个字节</p></blockquote><h3 id="常见的协议"><a href="#常见的协议" class="headerlink" title="常见的协议"></a>常见的协议</h3><p>DNS</p><h3 id="应用场景："><a href="#应用场景：" class="headerlink" title="应用场景："></a>应用场景：</h3><ol><li>面向数据报方式</li><li>网络数据大多为短消息</li><li>拥有大量Client</li><li>对数据安全性无特殊要求</li><li>网络负担非常重，但对响应速度要求高</li></ol><h2 id="TCP-vs-UDP"><a href="#TCP-vs-UDP" class="headerlink" title="TCP vs UDP"></a>TCP vs UDP</h2><table><thead><tr><th>-</th><th>TCP</th><th>UDP</th></tr></thead><tbody><tr><td>可靠性</td><td>可靠（面向连接）</td><td>不可靠（无连接）</td></tr><tr><td>有序性</td><td>有序</td><td>无序</td></tr><tr><td>占用资源</td><td>多</td><td>少</td></tr><tr><td>程序结构</td><td>复杂</td><td>简单</td></tr><tr><td>数据模式</td><td>数据流<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="可以合并多个请求数据(放在缓冲区中)，一次/多次读取完">[1]</span></a></sup>（字节流）</td><td>数据报文<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="发送几次请求，就需要接收几次；一次只能读取一个完整的报文">[2]</span></a></sup></td></tr><tr><td>通信模式</td><td>点对点</td><td>一对一，一对多，多对一，多对多</td></tr><tr><td>首部开销</td><td>20字节</td><td>8字节</td></tr><tr><td>通信信道</td><td>全双工</td><td>不可靠信道</td></tr></tbody></table><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><h2 id="IP-协议"><a href="#IP-协议" class="headerlink" title="IP 协议"></a>IP 协议</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>IP协议是<code>TCP/IP协议簇</code>中的核心协议，也是<code>TCP/IP</code>的载体。<br>所有的<code>TCP，UDP，ICMP及IGMP数据</code>都以 <strong>IP数据报</strong> 格式传输。<br>IP提供<strong>不可靠</strong>的，<strong>无连接</strong>的数据传送服务；如果<strong>发生某种错误，IP会丢失该数据，然后发送ICMP消息给信源端</strong></p><h3 id="IP数据报"><a href="#IP数据报" class="headerlink" title="IP数据报"></a>IP数据报</h3><p><img src="/images/2017/11/ip1.png" alt="ip1"><br><img src="/images/2017/11/ip2.png" alt="ip2"></p><h3 id="IP路由选择"><a href="#IP路由选择" class="headerlink" title="IP路由选择"></a>IP路由选择</h3><h4 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h4><p>经过<strong>ARP协议</strong>将目的主机的IP地址解析为MAC地址</p><h4 id="非局域网"><a href="#非局域网" class="headerlink" title="非局域网"></a>非局域网</h4><p>主机通过IP数据报连接目的主机时，按照如下步骤搜索:</p><ol><li>搜索路由表，优先搜索<strong>匹配主机</strong>，如果能找到和IP地址完全一致的目标主机，则将该包发向目标主机</li><li>搜索路由表，如果匹配主机失败，则匹配<strong>同子网的路由器</strong>，这需要子网掩码的协助。如果找到路由器，则将该包发向路由器。</li><li>搜索路由表，如果匹配同子网路由器失败，则匹配<strong>同网号路由器</strong>，如果找到路由器，则将该包发向路由器。</li><li>搜索路由表，如果以上都失败了，就<strong>搜索默认路由</strong>，如果默认路由存在，则发包</li><li>如果都失败了，就丢掉这个包。</li></ol><h3 id="如何查看路由表"><a href="#如何查看路由表" class="headerlink" title="如何查看路由表"></a>如何查看路由表</h3><p><img src="/images/2017/11/ip-router.png" alt="ip-router"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol" rel="external nofollow noopener noreferrer" target="_blank">维基百科-TCP</a></li><li><a href="https://baike.baidu.com/item/TCP/33012?fr=aladdin" rel="external nofollow noopener noreferrer" target="_blank">百科-TCP</a></li><li><a href="http://network.51cto.com/art/201411/456783.htm" rel="external nofollow noopener noreferrer" target="_blank">CDSN-TCP</a></li><li><a href="http://blog.csdn.net/houdong/article/details/1505798" rel="external nofollow noopener noreferrer" target="_blank">IP协议-CSDN</a></li><li><a href="https://jingyan.baidu.com/article/36d6ed1f56b9fe1bce48837f.html" rel="external nofollow noopener noreferrer" target="_blank">IP协议-百度经验</a></li></ul><!--以下是脚注--><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">可以合并多个请求数据(放在缓冲区中)，一次/多次读取完<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">发送几次请求，就需要接收几次；一次只能读取一个完整的报文<a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;指代整个协议族；由两个重要的协议：传输层的 &lt;strong&gt;TCP协议&lt;/s
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="计算机网络" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>网络参考模型</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/技术之路/计算机网络/网络参考模型/</id>
    <published>2017-11-10T18:52:00.000Z</published>
    <updated>2017-11-11T03:22:45.046Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="OSI-参考模型"><a href="#OSI-参考模型" class="headerlink" title="OSI 参考模型"></a>OSI 参考模型</h1><blockquote><p><strong>国际标准化组织(ISO)</strong> 和 <strong>国际电报电话咨询委员会(CCITT)</strong> 联合制定了 <strong>OSI（Open System Interconnect）</strong></p></blockquote><h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p>OSI参考模型是计算机网路体系结构发展的产物；其目的是为异种计算机互连提供 <strong>一个共同的基础和标准框架</strong> ，并为保持相关标准的一致性和兼容性提供共同的参考。</p><h2 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h2><p>实现「开放系统互连」所建立的「通信功能」的「分层模型」；分七层：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。</p><h2 id="HOW"><a href="#HOW" class="headerlink" title="HOW"></a>HOW</h2><ul><li>每一层的功能是独立的，利用下一层为上一层提供<strong>服务</strong>；</li><li>同等层实体之间通信由该层的<strong>协议</strong>管理。</li><li>除物理层之外，每层都会在原始数据前添加一串属于自己的<strong>协议头</strong>；接收端向上传递过程中会删除自己的协议头<blockquote><p><strong>服务</strong>：下一层向上一层提供的「通信功能」和「层之间的会话规定」。<br><strong>协议</strong>：两个开放系统中的 <strong>同等层之间的通信规则和约定</strong><br>  1～4层协议称为<strong>下层协议</strong><br>  5～7层协议称为<strong>上层协议</strong></p></blockquote></li></ul><h2 id="分层说明"><a href="#分层说明" class="headerlink" title="分层说明"></a>分层说明</h2><h3 id="应用层-Application"><a href="#应用层-Application" class="headerlink" title="应用层 (Application)"></a>应用层 (Application)</h3><p>网络服务与最终用户的一个接口。<br>协议有：HTTP FTP TFTP SMTP SNMP DNS TELNET HTTPS POP3 DHCP</p><h3 id="表示层（Presentation-Layer）"><a href="#表示层（Presentation-Layer）" class="headerlink" title="表示层（Presentation Layer）"></a>表示层（Presentation Layer）</h3><p>数据的表示、安全、压缩。（在五层模型里面已经合并到了应用层）<br>格式有，JPEG、ASCll、DECOIC、加密格式等</p><h3 id="会话层（Session-Layer）"><a href="#会话层（Session-Layer）" class="headerlink" title="会话层（Session Layer）"></a>会话层（Session Layer）</h3><p>建立、管理、终止会话。（在五层模型里面已经合并到了应用层）<br>对应主机进程，指本地主机与远程主机正在进行的会话</p><h3 id="传输层-Transport"><a href="#传输层-Transport" class="headerlink" title="传输层 (Transport)"></a>传输层 (Transport)</h3><p>定义传输数据的协议端口号，以及流控和差错校验。<br>协议有：TCP UDP，数据包一旦离开网卡即进入网络传输层</p><h3 id="网络层-Network"><a href="#网络层-Network" class="headerlink" title="网络层 (Network)"></a>网络层 (Network)</h3><p>进行逻辑地址寻址，实现不同网络之间的路径选择。<br>协议有：ICMP IGMP IP（IPV4 IPV6） ARP RARP</p><h3 id="数据链路层-Link"><a href="#数据链路层-Link" class="headerlink" title="数据链路层 (Link)"></a>数据链路层 (Link)</h3><p>建立逻辑连接、进行硬件地址寻址、差错校验等功能。（由底层网络定义协议）<br>将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现但不能纠正。</p><h3 id="物理层（Physical-Layer）"><a href="#物理层（Physical-Layer）" class="headerlink" title="物理层（Physical Layer）"></a>物理层（Physical Layer）</h3><p>建立、维护、断开物理连接。（由底层网络定义协议）</p><p><img src="/images/2017/11/osi.png" alt="OSI"></p><h1 id="TCP-IP-参考模型"><a href="#TCP-IP-参考模型" class="headerlink" title="TCP/IP 参考模型"></a>TCP/IP 参考模型</h1><blockquote><p>TCP/IP是先有了协议，才制定TCP/IP模型。目前是互联网的事实标准</p></blockquote><h2 id="WHY-1"><a href="#WHY-1" class="headerlink" title="WHY"></a>WHY</h2><p>ARPANET是由美国国防部DoD（U.S.Department of Defense）赞助的研究网络。逐渐地它通过租用的电话线连结了数百所大学和政府部门。当无线网络和卫星出现以后，现有的协议在和它们相连的时候出现了问题，所以需要一种新的参考体系结构。</p><h2 id="WHAT-1"><a href="#WHAT-1" class="headerlink" title="WHAT"></a>WHAT</h2><p>由 TCP、IP 两个协议演进过来的，共分为四层：网络访问层、互联网层、传输层和应用层</p><h2 id="HOW-1"><a href="#HOW-1" class="headerlink" title="HOW"></a>HOW</h2><p><img src="/images/2017/11/osi-translate.png" alt="osi-translate"></p><h2 id="分层说明-1"><a href="#分层说明-1" class="headerlink" title="分层说明"></a>分层说明</h2><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>为用户提供所需要的各种服务<br>协议有：HTTP、FTP、Telnet、DNS、SMTP等.</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>为应用层提供端到端的通信功能<br>协议有：TCP、UDP</p><h3 id="网络互联层"><a href="#网络互联层" class="headerlink" title="网络互联层"></a>网络互联层</h3><p>负责分配地址和传送二进制数据。<br>协议有：IP、IGMP、ICMP<br><strong>IP协议</strong>是网际互联层最重要的协议，它提供的是一个可靠、无连接的数据报传递服务。</p><h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>负责监视数据在主机和网络之间的交换。<strong>事实上，TCP/IP本身并未定义该层的协议</strong>，所以其具体实现的方法随着网络类型的不同而不同。</p><h1 id="OSI-比对-TCP-IP"><a href="#OSI-比对-TCP-IP" class="headerlink" title="OSI 比对 TCP/IP"></a>OSI 比对 TCP/IP</h1><p><img src="/images/2017/11/osi-tcp-ip.png" alt="OSI-TCP/IP"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="http://www.colasoft.com.cn/download/protocols_map.php" rel="external nofollow noopener noreferrer" target="_blank">科来协议图</a></li><li><a href="https://baike.baidu.com/item/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/1441391?fr=aladdin" rel="external nofollow noopener noreferrer" target="_blank">百科-七层模型</a></li><li><a href="https://baike.baidu.com/item/TCP%2FIP%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B" rel="external nofollow noopener noreferrer" target="_blank">百科-TCP/IP参考模型</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;OSI-参考模型&quot;&gt;&lt;a href=&quot;#OSI-参考模型&quot; cla
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="计算机网络" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>欢迎来到我的知识库！</title>
    <link href="http://yoursite.com/index/"/>
    <id>http://yoursite.com/index/</id>
    <published>2017-11-08T13:20:17.000Z</published>
    <updated>2017-11-09T12:04:59.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="何为「知识库」？"><a href="#何为「知识库」？" class="headerlink" title="何为「知识库」？"></a>何为「知识库」？</h1><p>在这个信息爆炸的年代，获取信息的成本接近于0，每天都有很多新的信息蜂拥而来；过往针对这些信息，我都是放在云笔记中（尝试过有道、印象、为知、蚂蚁等），但是放在笔记中不等于掌握，所以需要进一步的进行归纳和整理，所以才有了「知识库」。</p><h1 id="为什么要用-github-page-作为「知识库」"><a href="#为什么要用-github-page-作为「知识库」" class="headerlink" title="为什么要用 github page 作为「知识库」?"></a>为什么要用 <code>github page</code> 作为「知识库」?</h1><p>之前都是放在云笔记中，但是不利于查找和分享，同时有些需求云笔记不太能满足我；这边整理了下自己对「知识库」的需求：</p><ol><li>无限级分类</li><li>可以全文搜索</li><li>内容有目录</li><li>可以方便查询</li><li>便于进行知识梳理</li><li>保证数据不会丢失</li><li>内容有更新历史</li></ol><p>所以最终选择了使用 <code>github page</code>。</p><h1 id="「知识库」和「博客」有什么区别？"><a href="#「知识库」和「博客」有什么区别？" class="headerlink" title="「知识库」和「博客」有什么区别？"></a>「知识库」和「博客」有什么区别？</h1><p>个人学习的过程是：<code>收集-&gt;整理-&gt;吸收-&gt;输出</code></p><p><strong>收集</strong>：采用「evernote」进行信息的收集<br><strong>整理</strong>：采用「知识库」进行信息/知识的整理<br><strong>吸收</strong>：采用「博客」对知识进行深入的剖析/个人见解<br><strong>输出</strong>：在工作/学习中「实战」</p><p>综上所述，「知识库」是对知识的整理，「博客」是对知识的剖析</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;何为「知识库」？&quot;&gt;&lt;a href=&quot;#何为「知识库」？&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>YAR</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/PHP/yar/"/>
    <id>http://yoursite.com/技术之路/程序语言/PHP/yar/</id>
    <published>2017-11-07T14:35:00.000Z</published>
    <updated>2017-11-08T16:36:09.540Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="What"><a href="#What" class="headerlink" title="What"></a>What</h1><p>一个轻量级可并行的 RPC 框架，支持三种打包协议（msgpack,json,php）,传输协议支持 http（tcp/unix以后会支持）<br>​</p><blockquote><p>github 地址：<a href="https://github.com/laruence/yar" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/laruence/yar</a><br>php 官网：<a href="http://php.net/manual/zh/book.yar.php" rel="external nofollow noopener noreferrer" target="_blank">http://php.net/manual/zh/book.yar.php</a></p></blockquote><h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><p>鸟哥举了两个场景(传统 web 应用)：  </p><ol><li><p>一个进程，一个请求，但是涉及到多个没有依赖性的数据源，只能串行处理（依次等待所有数据源处理）完毕后才能响应；  </p><blockquote><p>yar 可以并行处理，减少时间开销</p></blockquote></li><li><p>一个应用系统随着业务的增加，人员流失，只做加法，等到不可维护性的时候，只能重构</p><blockquote><p>yar 可以给系统进行解耦（实际上是 soa 思想）</p></blockquote></li></ol><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><p>放置在 web 服务器上，通过 http 访问(默认get访问会输出 doc 信息)</p><h2 id="client"><a href="#client" class="headerlink" title="client"></a>client</h2><ol><li>串行调用</li><li>并行调用（yar 内部使用 libcurl + epoll ）</li></ol><h1 id="高级进阶"><a href="#高级进阶" class="headerlink" title="高级进阶"></a>高级进阶</h1><h2 id="Yar-协议分析"><a href="#Yar-协议分析" class="headerlink" title="Yar 协议分析"></a>Yar 协议分析</h2><p>Yar整个协议由82字节长度的yar_header + 8字节的数据打包协议(MSGPACK、JSON、PHP)  + N字节的Body组成。</p><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><blockquote><p>未验证</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">typedef struct _yar_header &#123;</span><br><span class="line">  unsigned int   id;            // transaction id</span><br><span class="line">  unsigned short version;       // protocl version</span><br><span class="line">  unsigned int   magic_num;     // default is: 0x80DFEC60</span><br><span class="line">  unsigned int   reserved;</span><br><span class="line">  unsigned char  provider[32];  // reqeust from who</span><br><span class="line">  unsigned char  token[32];     // request token, used for authentication</span><br><span class="line">  unsigned int   body_len;      // request body len</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>struct <code>_yar_header</code>中需要注意的是magic_num值。该值在Client与Server都应该保持一致。否则视为不合法的数据。我们可以通过修改这个值，定制一个yar框架，防止其他人恶意请求。</p></blockquote><h2 id="跨语言"><a href="#跨语言" class="headerlink" title="跨语言"></a>跨语言</h2><blockquote><p>利用 yar 可以接收 struct 实现</p></blockquote><ul><li>client</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array(</span><br><span class="line">  &quot;i&quot; =&gt; &apos;&apos;, // transaction id</span><br><span class="line">  &quot;m&quot; =&gt; &apos;&apos;,  // the method which being called</span><br><span class="line">  &quot;p&quot; =&gt; array(), // parameters</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>server</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">array(</span><br><span class="line">   &quot;i&quot; =&gt; &apos;&apos;,</span><br><span class="line">   &quot;s&quot; =&gt; &apos;&apos;, //status</span><br><span class="line">   &quot;r&quot; =&gt; &apos;&apos;, //return value</span><br><span class="line">   &quot;o&quot; =&gt; &apos;&apos;, //output</span><br><span class="line">   &quot;e&quot; =&gt; &apos;&apos;, //error or exception</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://www.laruence.com/2012/09/15/2779.html" rel="external nofollow noopener noreferrer" target="_blank">Yar – 并行的RPC框架(Concurrent RPC framework)</a></li><li><a href="http://www.searchtb.com/2013/10/yar-%E5%B9%B6%E8%A1%8Crpc%E6%A1%86%E6%9E%B6%E7%A0%94%E7%A9%B6.html" rel="external nofollow noopener noreferrer" target="_blank">YAR 并行RPC框架研究</a></li><li><a href="http://blog.weixinhost.com/wei-ming-ming/" rel="external nofollow noopener noreferrer" target="_blank">Yar协议分析与跨语言实现</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;head
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="程序语言" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/PHP/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="yar" scheme="http://yoursite.com/tags/yar/"/>
    
      <category term="php_ext" scheme="http://yoursite.com/tags/php-ext/"/>
    
  </entry>
  
  <entry>
    <title>MAC 必备软件</title>
    <link href="http://yoursite.com/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/mac/"/>
    <id>http://yoursite.com/效率工具/mac/</id>
    <published>2017-11-06T15:25:00.000Z</published>
    <updated>2017-11-08T16:06:37.733Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><ul><li><a href="http://matthewpalmer.net/vanilla/" rel="external nofollow noopener noreferrer" target="_blank">Vanilla</a>：隐藏菜单栏</li><li><a href="https://www.spectacleapp.com/" rel="external nofollow noopener noreferrer" target="_blank">Spectacle</a>：窗口分屏</li><li><a href="https://coffitivity.com/" rel="external nofollow noopener noreferrer" target="_blank">Coffitivity</a>：白噪音</li><li><a href="https://www.enpass.io/" rel="external nofollow noopener noreferrer" target="_blank">Enpass</a>：密码管理工具</li><li><a href="https://www.teamviewer.com/zhCN/" rel="external nofollow noopener noreferrer" target="_blank">TeamViewer</a>：远程控制</li><li><a href="http://www.yingdev.com/projects/tickeys" rel="external nofollow noopener noreferrer" target="_blank">Tickeys</a>：打字音效</li><li><a href="https://getlantern.org/" rel="external nofollow noopener noreferrer" target="_blank">Lantern</a>：“VPN”</li></ul><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><ul><li><a href="https://apps.ankiweb.net/" rel="external nofollow noopener noreferrer" target="_blank">Anki</a>：复习工具</li><li><a href="https://www.yinxiang.com/" rel="external nofollow noopener noreferrer" target="_blank">Evernote</a>：收集资料</li><li><a href="https://leanote.com/" rel="external nofollow noopener noreferrer" target="_blank">Leanote</a>：笔记</li><li><a href="https://marginnote.com/" rel="external nofollow noopener noreferrer" target="_blank">MarginNote Pro</a>：学习 pdf 神器（收费）</li><li><a href="https://mindnode.com/" rel="external nofollow noopener noreferrer" target="_blank">MindNode</a>：思维导图（收费）</li></ul><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><ul><li><a href="https://atom.io/" rel="external nofollow noopener noreferrer" target="_blank">Atom</a>：编辑器</li><li><a href="https://www.charlesproxy.com/" rel="external nofollow noopener noreferrer" target="_blank">Charles</a>：抓包工具（收费）</li><li><a href="https://kapeli.com/dash" rel="external nofollow noopener noreferrer" target="_blank">Dash</a>：文档（收费）</li><li><a href="http://www.iterm2.com/" rel="external nofollow noopener noreferrer" target="_blank">iTerm 2</a>：终端</li><li><a href="https://www.jetbrains.com/phpstorm/" rel="external nofollow noopener noreferrer" target="_blank">PhpStorm</a>：PHP 的 IDE</li><li><a href="http://www.sequelpro.com/" rel="external nofollow noopener noreferrer" target="_blank">Sequel Pro</a>：Mysql 客户端</li><li><a href="https://www.sourcetreeapp.com/" rel="external nofollow noopener noreferrer" target="_blank">SourceTree</a>：Git 客户端</li><li><a href="http://www.sublimetext.com/" rel="external nofollow noopener noreferrer" target="_blank">Sublime Text</a>：轻量可定制编辑器</li><li><a href="https://www.typora.io/" rel="external nofollow noopener noreferrer" target="_blank">Typora</a>：MD 编辑器</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;系统&quot;&gt;&lt;a href=&quot;#系统&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="效率工具" scheme="http://yoursite.com/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Blog 系统之 Hexo</title>
    <link href="http://yoursite.com/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/blog/"/>
    <id>http://yoursite.com/开源软件简析/blog/</id>
    <published>2017-11-05T06:26:00.000Z</published>
    <updated>2017-11-08T15:59:00.335Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Blog-系统"><a href="#Blog-系统" class="headerlink" title="Blog 系统"></a>Blog 系统</h1><p>之前用的是 Octopress ，由于不更新了，且使用的是 ruby 开发，生成 html 比较慢，所以迁移到 hexo。</p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h2><p><a href="https://hexo.io/zh-cn/docs/" rel="external nofollow noopener noreferrer" target="_blank">hexo 文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> npm install -g hexo-cli</span><br><span class="line"><span class="meta">$</span> hexo init &lt;folder&gt;</span><br><span class="line"><span class="meta">$</span> cd &lt;folder&gt;</span><br><span class="line"><span class="meta">$</span> npm install</span><br></pre></td></tr></table></figure><p>安装完毕后，请自行修改 <code>/_config.yml</code></p><p><strong> 最后别忘记添加 CNAME</strong></p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>采用 Hiker 主题；<a href="https://github.com/iTimeTraveler/hexo-theme-hiker/blob/master/README.cn.md" rel="external nofollow noopener noreferrer" target="_blank">[中文说明]</a> <a href="https://github.com/iTimeTraveler/hexo-theme-hiker" rel="external nofollow noopener noreferrer" target="_blank">[Github]</a></p><p><strong>删除作者自己的 cnzz 统计代码</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># source/js/scripts.js 中，删除以下代码</span><br><span class="line"><span class="keyword">var</span> s = [</span><br><span class="line">        <span class="string">'&lt;div style="display: none;"&gt;'</span>,</span><br><span class="line">          <span class="string">'&lt;script src="https://s11.cnzz.com/z_stat.php?id=1260716016&amp;web_id=1260716016" language="JavaScript"&gt;&lt;/script&gt;'</span>,</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">      ].join(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> di = $(s);</span><br><span class="line"></span><br><span class="line">  $(<span class="string">'#container'</span>).append(di);</span><br></pre></td></tr></table></figure><p><strong>修改主题的配置文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /themes/hiker/_config.yml</span></span><br><span class="line"><span class="comment"># 清空以下信息，都是作者本人信息</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line"><span class="comment"># 其他数据请自行填充</span></span><br></pre></td></tr></table></figure><h1 id="Atom-配置"><a href="#Atom-配置" class="headerlink" title="Atom 配置"></a>Atom 配置</h1><blockquote><p>采用 atom 作为 md 的编辑器</p></blockquote><p>详细配置见：<a href="/intro/atom.html#hexo">atom-hexo配置</a></p><h1 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h1><blockquote><p>详细命令清单见：<kbd><a href="https://hexo.io/zh-cn/docs/commands.html" rel="external nofollow noopener noreferrer" target="_blank">hexo 命令</a></kbd></p></blockquote><h2 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h2 id="实时更新预览"><a href="#实时更新预览" class="headerlink" title="实时更新预览"></a>实时更新预览</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -w</span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h1 id="自定义命令"><a href="#自定义命令" class="headerlink" title="自定义命令"></a>自定义命令</h1><p><strong>配置</strong></p><p>bash/zsh 的配置文件 .basrc/.zshrc  增加如下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> BLOG_PATH=<span class="string">"blog的目录"</span></span><br><span class="line"><span class="built_in">alias</span> blog_root=<span class="string">"cd <span class="variable">$BLOG_PATH</span>/"</span></span><br><span class="line">PATH=<span class="string">"...:<span class="variable">$BLOG_PATH</span>/shell"</span></span><br></pre></td></tr></table></figure><h2 id="进入-Hexo-根目录"><a href="#进入-Hexo-根目录" class="headerlink" title="进入 Hexo 根目录"></a>进入 Hexo 根目录</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog_root</span><br></pre></td></tr></table></figure><h2 id="预览-1"><a href="#预览-1" class="headerlink" title="预览"></a>预览</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog_preview</span><br></pre></td></tr></table></figure><h2 id="生成-html"><a href="#生成-html" class="headerlink" title="生成 html"></a>生成 html</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog_generate</span><br></pre></td></tr></table></figure><h2 id="发布-1"><a href="#发布-1" class="headerlink" title="发布"></a>发布</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog_deploy</span><br></pre></td></tr></table></figure><h2 id="打开-atom"><a href="#打开-atom" class="headerlink" title="打开 atom"></a>打开 atom</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog_atom</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Blog-系统&quot;&gt;&lt;a href=&quot;#Blog-系统&quot; class
      
    
    </summary>
    
      <category term="开源软件简析" scheme="http://yoursite.com/categories/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Atom 编辑器</title>
    <link href="http://yoursite.com/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/atom/"/>
    <id>http://yoursite.com/开源软件简析/atom/</id>
    <published>2017-11-04T21:51:00.000Z</published>
    <updated>2017-11-08T16:01:35.580Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul><li>markdown-preview-enhanced ：增强版 md 预览</li><li>markdown-writer ：写博客必备利器</li><li>tool-bar ：工具栏基类</li><li>tool-bar-markdown-writer ： md-writer的工具栏</li><li>vim-mode-plus ：vim 插件</li><li>markdown-table-editor ：表格编辑工具</li><li>atom-terminal ：终端</li></ul><p><strong>tool-bar-markdown-writer</strong></p><p>修改文件 <code>~/.atom/packages/tool-bar-markdown-writer/lib/tool-bar-markdown-writer.coffee</code> 增加如下功能：</p><ul><li>增加 publish-draft</li><li>Preview markdown 增加支持 <code>markdown-preview-enhanced</code></li></ul><p>新增的配置如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">'icon'</span>: <span class="string">'content-duplicate'</span></span><br><span class="line">  <span class="string">'tooltip'</span>: <span class="string">'Publish Draft'</span></span><br><span class="line">  <span class="string">'callback'</span>: <span class="string">'markdown-writer:publish-draft'</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">'icon'</span>: <span class="string">'markdown'</span></span><br><span class="line">  <span class="string">'tooltip'</span>: <span class="string">'Preview Markdown'</span></span><br><span class="line">  <span class="string">'data'</span>: [<span class="string">'markdown-preview-enhanced'</span>, <span class="string">'markdown-preview-plus'</span>,<span class="string">'markdown-preview'</span>]</span><br><span class="line">  <span class="string">'visible'</span>: (data) -&gt;</span><br><span class="line">    pkg = data.find (pkg) -&gt; !!atom.packages.getLoadedPackage(pkg)</span><br><span class="line">    <span class="string">"#&#123;pkg&#125;:toggle"</span> <span class="keyword">if</span> pkg</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Atom 配置文件</strong><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"*"</span><span class="string">:</span></span><br><span class="line"><span class="attr">  core:</span></span><br><span class="line"><span class="attr">    packagesWithKeymapsDisabled:</span> <span class="string">[</span></span><br><span class="line">      <span class="string">"markdown-preview"</span></span><br><span class="line">    <span class="string">]</span></span><br><span class="line"><span class="attr">    telemetryConsent:</span> <span class="string">"no"</span></span><br><span class="line"><span class="attr">  "exception-reporting":</span></span><br><span class="line"><span class="attr">    userId:</span> <span class="string">"5a8289c3-5832-4d26-af7b-3235427b72da"</span></span><br><span class="line"><span class="attr">  "markdown-preview-enhanced":</span></span><br><span class="line"><span class="attr">    enableExtendedTableSyntax:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    imageDropAction:</span> <span class="string">"copy to image folder"</span></span><br><span class="line"><span class="attr">    mathRenderingOption:</span> <span class="string">"MathJax"</span></span><br><span class="line"><span class="attr">  "markdown-writer":</span></span><br><span class="line"><span class="attr">    fileExtension:</span> <span class="string">".md"</span></span><br><span class="line"><span class="attr">    renameImageOnCopy:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  "tool-bar":</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">  "tool-bar-markdown-writer":</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">  "vim-mode-plus":</span></span><br><span class="line"><span class="attr">    notifiedCoffeeScriptNoLongerSupportedToExtendVMP:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  welcome:</span></span><br><span class="line"><span class="attr">    showOnStartup:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h1 id="Simiki-配置"><a href="#Simiki-配置" class="headerlink" title="Simiki 配置"></a>Simiki 配置</h1><blockquote><p>主要使用的是 md-writer</p></blockquote><p>生成项目专用的配置文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击 packages -&gt; markdown-writer -&gt; configurations -&gt; create project configs</span><br></pre></td></tr></table></figure><p>最终在项目的根目录下生成 <code>_mdwriter.cson</code></p><p>修改如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Directory to drafts from siteLocalDir</span></span><br><span class="line"><span class="attr">siteDraftsDir:</span> <span class="string">"content/"</span></span><br><span class="line"><span class="comment"># Directory to posts from siteLocalDir</span></span><br><span class="line"><span class="attr">sitePostsDir:</span> <span class="string">"content/"</span></span><br><span class="line"><span class="comment"># Directory to images from siteLocalDir</span></span><br><span class="line"><span class="comment"># - E.g. to use the current filename directory, can use &#123;directory&#125;</span></span><br><span class="line"><span class="attr">siteImagesDir:</span> <span class="string">"attach/img/&#123;year&#125;/&#123;month&#125;/"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Filename format of new drafts created</span></span><br><span class="line"><span class="attr">newDraftFileName:</span> <span class="string">"&#123;slug&#125;&#123;extension&#125;"</span></span><br><span class="line"><span class="comment"># Filename format of new posts created</span></span><br><span class="line"><span class="attr">newPostFileName:</span> <span class="string">"&#123;slug&#125;&#123;extension&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Front matter date format, determines the &#123;date&#125; in frontMatter</span></span><br><span class="line"><span class="attr">frontMatterDate:</span> <span class="string">"&#123;year&#125;-&#123;month&#125;-&#123;day&#125; &#123;hour&#125;:&#123;minute&#125;"</span></span><br><span class="line"><span class="comment"># Front matter template</span></span><br><span class="line"><span class="attr">frontMatter:</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">title: "</span><span class="string">&#123;title&#125;"</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">"&#123;date&#125;"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"page"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">[TOC]</span></span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># File extension of posts/drafts</span></span><br><span class="line"><span class="string">fileExtension: "</span><span class="string">.md"</span></span><br><span class="line"><span class="comment"># File slug separator</span></span><br><span class="line"><span class="attr">slugSeparator:</span> <span class="string">"-"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tableExtraPipes:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h1><blockquote><p>主要使用的是 md-writer</p></blockquote><p>生成项目专用的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击 packages -&gt; markdown-writer -&gt; configurations -&gt; create project configs</span><br></pre></td></tr></table></figure><p>最终在项目的根目录下生成 <code>_mdwriter.cson</code></p><p>修改如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">siteEngine:</span> <span class="string">"hexo"</span></span><br><span class="line"><span class="comment"># Website URL of your blog</span></span><br><span class="line"><span class="attr">siteUrl:</span> <span class="string">"http://www.helongfei.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory to drafts from siteLocalDir</span></span><br><span class="line"><span class="attr">siteDraftsDir:</span> <span class="string">"source/_drafts/"</span></span><br><span class="line"><span class="comment"># Directory to posts from siteLocalDir</span></span><br><span class="line"><span class="attr">sitePostsDir:</span> <span class="string">"source/_posts/&#123;year&#125;/"</span></span><br><span class="line"><span class="comment"># Directory to images from siteLocalDir</span></span><br><span class="line"><span class="comment"># - E.g. to use the current filename directory, can use &#123;directory&#125;</span></span><br><span class="line"><span class="attr">siteImagesDir:</span> <span class="string">"source/images/&#123;year&#125;/&#123;month&#125;/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Filename format of new drafts created</span></span><br><span class="line"><span class="attr">newDraftFileName:</span> <span class="string">"&#123;slug&#125;&#123;extension&#125;"</span></span><br><span class="line"><span class="comment"># Filename format of new posts created</span></span><br><span class="line"><span class="attr">newPostFileName:</span> <span class="string">"&#123;slug&#125;&#123;extension&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Front matter date format, determines the &#123;date&#125; in frontMatter</span></span><br><span class="line"><span class="attr">frontMatterDate:</span> <span class="string">"&#123;year&#125;-&#123;month&#125;-&#123;day&#125; &#123;hour&#125;:&#123;minute&#125;"</span></span><br><span class="line"><span class="comment"># Front matter template</span></span><br><span class="line"><span class="attr">frontMatter:</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">layout: "</span><span class="string">&#123;layout&#125;"</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">"&#123;title&#125;"</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">"&#123;date&#125;"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># File extension of posts/drafts</span></span><br><span class="line"><span class="string">fileExtension: "</span><span class="string">.md"</span></span><br><span class="line"><span class="comment"># File slug separator</span></span><br><span class="line"><span class="attr">slugSeparator:</span> <span class="string">"-"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Table row continuation</span></span><br><span class="line"><span class="comment"># - Enable to auto insert table columns when you press enter in a table row</span></span><br><span class="line"><span class="attr">tableNewLineContinuation:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;head
      
    
    </summary>
    
      <category term="开源软件简析" scheme="http://yoursite.com/categories/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Wiki 系统之 Simiki</title>
    <link href="http://yoursite.com/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/wiki/"/>
    <id>http://yoursite.com/开源软件简析/wiki/</id>
    <published>2017-11-03T16:00:00.000Z</published>
    <updated>2017-11-08T16:23:55.272Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Wiki-系统"><a href="#Wiki-系统" class="headerlink" title="Wiki 系统"></a>Wiki 系统</h1><p>需求：git+md</p><table><thead><tr><th style="text-align:left">系统</th><th style="text-align:left">实现方式</th><th style="text-align:left">缺点</th><th style="text-align:left">优点</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.dokuwiki.org/dokuwiki#" rel="external nofollow noopener noreferrer" target="_blank">dokuwiki</a></td><td style="text-align:left">php+文本</td><td style="text-align:left">编辑器不好用；数据量大搜索可能有性能问题（txt）</td><td style="text-align:left">插件丰富，txt移植方便</td></tr><tr><td style="text-align:left"><a href="https://www.mediawiki.org/wiki/MediaWiki" rel="external nofollow noopener noreferrer" target="_blank">mediawiki</a></td><td style="text-align:left">php+mysql</td><td style="text-align:left">配置复杂；visualeditor 加载慢</td><td style="text-align:left">功能全面，visualeditor</td></tr><tr><td style="text-align:left"><a href="http://simiki.org/" rel="external nofollow noopener noreferrer" target="_blank">simiki</a></td><td style="text-align:left">git+md</td><td style="text-align:left">全量生成html；图片支持不好</td><td style="text-align:left">可定制</td></tr><tr><td style="text-align:left"><a href="https://www.gitbook.com/" rel="external nofollow noopener noreferrer" target="_blank">gitbook</a></td><td style="text-align:left">git+md</td><td style="text-align:left">全量生成 html ( 渲染巨慢 )</td><td style="text-align:left">有编辑器</td></tr></tbody></table><h1 id="Simiki-安装"><a href="#Simiki-安装" class="headerlink" title="Simiki 安装"></a>Simiki 安装</h1><p><a href="http://simiki.org/zh-docs/" rel="external nofollow noopener noreferrer" target="_blank">simiki 文档</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install simiki</span><br><span class="line">mkdir mywiki &amp;&amp; <span class="built_in">cd</span> mywiki</span><br><span class="line">simiki init</span><br></pre></td></tr></table></figure><p>配置 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">yasimple_x2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">fenced_code</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">extra</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">codehilite(css_class=hlcode,</span> <span class="string">linenums=False)</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">toc(title=Table</span> <span class="string">of</span> <span class="string">Contents)</span></span><br></pre></td></tr></table></figure><p>增加 CNAME 文件</p><blockquote><p>为了域名解析；文本内容为待解析域名</p></blockquote><h1 id="Atom-配置"><a href="#Atom-配置" class="headerlink" title="Atom 配置"></a>Atom 配置</h1><blockquote><p>使用 Atom 作为 md 编辑器</p></blockquote><p>详细配置见 <a href="/intro/atom.html#simiki">Atom-simike 配置</a></p><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><h2 id="fab"><a href="#fab" class="headerlink" title="fab"></a>fab</h2><p>需要<code>_config.yml</code>增加如下配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    remote:</span> <span class="string">origin</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure><p>发布的时候如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fab deploy#不支持python3</span><br></pre></td></tr></table></figure><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p>使用自定义命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wiki_deploy</span><br></pre></td></tr></table></figure><h1 id="simiki-命令"><a href="#simiki-命令" class="headerlink" title="simiki 命令"></a>simiki 命令</h1><h2 id="生成-html"><a href="#生成-html" class="headerlink" title="生成 html"></a>生成 html</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simiki g</span><br></pre></td></tr></table></figure><h2 id="预览-wiki"><a href="#预览-wiki" class="headerlink" title="预览 wiki"></a>预览 wiki</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simiki p</span><br></pre></td></tr></table></figure><h2 id="实时生成-html"><a href="#实时生成-html" class="headerlink" title="实时生成 html"></a>实时生成 html</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simiki p -w</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Wiki-系统&quot;&gt;&lt;a href=&quot;#Wiki-系统&quot; class
      
    
    </summary>
    
      <category term="开源软件简析" scheme="http://yoursite.com/categories/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Codeception 之验收测试</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%B5%8B%E8%AF%95/codeception/"/>
    <id>http://yoursite.com/技术之路/测试/codeception/</id>
    <published>2016-05-02T07:38:09.000Z</published>
    <updated>2017-11-08T16:31:56.840Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Acceptance-Testing"><a href="#Acceptance-Testing" class="headerlink" title="Acceptance Testing"></a>Acceptance Testing</h1><p>验收测试针对整个站点进行测试，模拟真实用户的访问流程。</p><p>写测试的人员不需要知道网站的内部实现。</p><h1 id="两种测试类型"><a href="#两种测试类型" class="headerlink" title="两种测试类型"></a>两种测试类型</h1><h2 id="PhpBrowser"><a href="#PhpBrowser" class="headerlink" title="PhpBrowser"></a>PhpBrowser</h2><p>配置<code>tests/acceptance.suite.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class_name: AcceptanceTester</span><br><span class="line">modules:</span><br><span class="line">    enabled:</span><br><span class="line">        - PhpBrowser:</span><br><span class="line">            url:</span><br><span class="line">        - \Helper\Acceptance</span><br></pre></td></tr></table></figure><h2 id="Selenium-WebDriver"><a href="#Selenium-WebDriver" class="headerlink" title="Selenium WebDriver"></a>Selenium WebDriver</h2><p>配置<code>tests/acceptance.suite.yml</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class_name: AcceptanceTester</span><br><span class="line">modules:</span><br><span class="line">    enabled:</span><br><span class="line">        - WebDriver:</span><br><span class="line">            url:</span><br><span class="line">            browser: chrome</span><br><span class="line">        - \Helper\Acceptance</span><br></pre></td></tr></table></figure><p>配置<code>Selenium</code>环境</p><ol><li>下载<a href="http://docs.seleniumhq.org/download/" rel="external nofollow noopener noreferrer" target="_blank">Selenium Standalone Server</a></li><li>下载<a href="https://sites.google.com/a/chromium.org/chromedriver/" rel="external nofollow noopener noreferrer" target="_blank">Google Chrome Driver</a></li><li>启动：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//启动selenium-server</span><br><span class="line">java -jar selenium-server-standalone-2.53.0.jar</span><br><span class="line">//启动Chrome Driver</span><br><span class="line">./chromedriver</span><br></pre></td></tr></table></figure><h1 id="编写测试"><a href="#编写测试" class="headerlink" title="编写测试"></a>编写测试</h1><blockquote><p>测试写在<code>tests/acceptance</code>,后缀为<code>Cept</code>，例如：<code>SiginCept.php</code></p></blockquote><h2 id="PhpBrowser测试"><a href="#PhpBrowser测试" class="headerlink" title="PhpBrowser测试"></a>PhpBrowser测试</h2><p>文档参考：PHP Browser</p><ul><li>actions</li><li>Assertions  </li><li>Grabbers</li><li>Comments</li><li>Cookies, Urls, Title</li></ul><h2 id="Selenium-WebDriver测试"><a href="#Selenium-WebDriver测试" class="headerlink" title="Selenium WebDriver测试"></a>Selenium WebDriver测试</h2><p>文档参考：Selenium WebDriver</p><ul><li>Session Snapshots</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="DB配置"><a href="#DB配置" class="headerlink" title="DB配置"></a>DB配置</h3><ol><li>SQL语句<br>放在 <code>/tests/_data</code> 下</li><li>DB-config<br>修改<code>codeception.yml</code></li></ol><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><ol><li>命令行增加 <code>--debug</code></li><li>手动输出 <code>codecept_debug()</code></li><li>手动下一步 <a href="http://codeception.com/docs/modules/WebDriver#pauseExecution" rel="external nofollow noopener noreferrer" target="_blank">pauseExecution</a></li><li>记录测试 <a href="http://codeception.com/addons#CodeceptionExtensionRecorder" rel="external nofollow noopener noreferrer" target="_blank">Recorder extension</a></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://codeception.com/docs/03-AcceptanceTests" rel="external nofollow noopener noreferrer" target="_blank">Acceptance Testing介绍</a></li><li><a href="http://codeception.com/docs/03-AcceptanceTests#PHP-Browser" rel="external nofollow noopener noreferrer" target="_blank">PHP Browser介绍</a></li><li><a href="http://codeception.com/docs/modules/PhpBrowser" rel="external nofollow noopener noreferrer" target="_blank">PHP Browser文档</a></li><li><a href="http://codeception.com/docs/modules/WebDriver" rel="external nofollow noopener noreferrer" target="_blank">Selenium WebDriver文档</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Acceptance-Testing&quot;&gt;&lt;a href=&quot;#Acc
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="Codeception" scheme="http://yoursite.com/tags/Codeception/"/>
    
  </entry>
  
  <entry>
    <title>RBAC</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/rbac/"/>
    <id>http://yoursite.com/技术之路/权限控制/rbac/</id>
    <published>2016-04-10T06:36:00.000Z</published>
    <updated>2017-11-08T16:40:20.018Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在权限设计中，若权限比较复杂，使用简单的权限判断，则会使代码比较冗长，逻辑比较复杂，不利用维护和扩展。这时可以考虑使用 RBAC。</p><h1 id="RBAC-介绍"><a href="#RBAC-介绍" class="headerlink" title="RBAC 介绍"></a>RBAC 介绍</h1><p>RBAC（Role-Based Access Control ）基于角色的访问控制。抽象出来就是用户，角色和权利三个方面。在权利和用户之间，增加一个角色，使其不再耦合在一起，方便维护和扩展。</p><p>一个角色拥有多个权利，一个用户想拥有某些权利时，只需要附给用户相应的角色即可。若一些用户需要相同的角色，则建立起用户组即可。</p><h1 id="RBAC-分类"><a href="#RBAC-分类" class="headerlink" title="RBAC 分类"></a>RBAC 分类</h1><h2 id="RBAC0"><a href="#RBAC0" class="headerlink" title="RBAC0"></a>RBAC0</h2><blockquote><p>RBAC核心,其他分类都是建立在此基础上</p></blockquote><p>主要有四部分组成：</p><ol><li>用户</li><li>角色</li><li>权限</li><li>会话</li></ol><p>用户和角色是多对多关系，角色和权限是多对多关系。 <strong>一个会话只能由一个用户创建</strong>，会话和角色是多对多关系。<br><img src="/images/2017/11/rbac0-1.png" alt="rbac0_1"><br>一般会有8张表来设计(若不需要用户组，则是5张表)：<br><img src="/images/2017/11/rbac0-2.png" alt="rbac0_2"></p><h2 id="RBAC1"><a href="#RBAC1" class="headerlink" title="RBAC1"></a>RBAC1</h2><blockquote><p>基于 RBAC0 的角色分级；角色有了继承和包含的层级</p></blockquote><p>这种模型使用 RBAC0 也是可以实现的，但是会造成数据冗余</p><h2 id="RBAC2"><a href="#RBAC2" class="headerlink" title="RBAC2"></a>RBAC2</h2><blockquote><p>基于 RBAC0 的角色限制（互斥，数量限制等）</p></blockquote><h2 id="RBAC3"><a href="#RBAC3" class="headerlink" title="RBAC3"></a>RBAC3</h2><blockquote><p>组合 RBAC1 和 RBAC2</p></blockquote><h1 id="RBAC-总结"><a href="#RBAC-总结" class="headerlink" title="RBAC 总结"></a>RBAC 总结</h1><p>通常使用 RBAC0 就可以解决大部分权限问题，其他的细节在具体的设计中具体分析。RBAC 只是一种设计思想，我们在设计的过程中要具体问题具体分析，灵活的使用，不要照本宣科。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://blog.csdn.net/liujiahan629629/article/details/23128651" rel="external nofollow noopener noreferrer" target="_blank">权限管理——RBAC模型总结</a></li><li><a href="http://baike.baidu.com/view/73432.htm" rel="external nofollow noopener noreferrer" target="_blank">RBAC</a></li><li><a href="http://blog.csdn.net/painsonline/article/details/7183613/" rel="external nofollow noopener noreferrer" target="_blank">RBAC权限管理</a></li><li><a href="https://zh.wikipedia.org/wiki/以角色為基礎的存取控制" rel="external nofollow noopener noreferrer" target="_blank">基于角色的访问控制</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="权限控制" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="rbac" scheme="http://yoursite.com/tags/rbac/"/>
    
  </entry>
  
  <entry>
    <title>PSR</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/PHP/php-psr/"/>
    <id>http://yoursite.com/技术之路/程序语言/PHP/php-psr/</id>
    <published>2016-04-02T16:45:00.000Z</published>
    <updated>2017-11-08T16:37:24.141Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="PSR"><a href="#PSR" class="headerlink" title="PSR"></a>PSR</h1><blockquote><p>PSR 来自 PHP FIG(框架协同工作组)</p></blockquote><p>现有规范</p><ul><li>PSR-0/PSR-4 自动加载（2014.10.21起弃用，请使用 PSR-4）</li><li>PSR-1 基本规范</li><li>PSR-2 代码风格</li><li>PSR-3 日志接口</li></ul><h2 id="PSR-0-PSR-4"><a href="#PSR-0-PSR-4" class="headerlink" title="PSR-0/PSR-4"></a>PSR-0/PSR-4</h2><blockquote><p>自动加载<br>class 指 class,interface,trait和其他相似的结构</p></blockquote><h3 id="PSR-0-弃用"><a href="#PSR-0-弃用" class="headerlink" title="PSR-0(弃用)"></a>PSR-0(弃用)</h3><p>按照目录拼接类名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/path/to/src/</span><br><span class="line">    VendorFoo/</span><br><span class="line">        Bar/</span><br><span class="line">            Baz.php     # VendorFoo_Bar_Baz</span><br></pre></td></tr></table></figure><h3 id="PSR-4"><a href="#PSR-4" class="headerlink" title="PSR-4"></a>PSR-4</h3><ol><li>类名中下划线转为目录</li><li>每个命名空间必须有顶级命名空间（vender）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vendor_Name</span><br><span class="line">  |- Name_space</span><br><span class="line">    |- Class</span><br><span class="line">    |-Name.php   # \Vendor_Name\Name_space\Class_Name</span><br></pre></td></tr></table></figure><h3 id="自动加载方法"><a href="#自动加载方法" class="headerlink" title="自动加载方法"></a>自动加载方法</h3><ul><li>函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function autoload($className)</span><br><span class="line">&#123;</span><br><span class="line">    $className = ltrim($className, &apos;\\&apos;);</span><br><span class="line">    $fileName  = &apos;&apos;;</span><br><span class="line">    $namespace = &apos;&apos;;</span><br><span class="line">    if ($lastNsPos = strrpos($className, &apos;\\&apos;)) &#123;</span><br><span class="line">        $namespace = substr($className, 0, $lastNsPos);</span><br><span class="line">        $className = substr($className, $lastNsPos + 1);</span><br><span class="line">        $fileName  = str_replace(&apos;\\&apos;, DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line">    $fileName .= str_replace(&apos;_&apos;, DIRECTORY_SEPARATOR, $className) . &apos;.php&apos;;</span><br><span class="line"></span><br><span class="line">    require $fileName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>类: <a href="http://gist.github.com/221634" rel="external nofollow noopener noreferrer" target="_blank">SplClassLoader</a></li></ul><h2 id="PSR-1"><a href="#PSR-1" class="headerlink" title="PSR-1"></a>PSR-1</h2><blockquote><p>基本代码规范  </p></blockquote><ul><li>「文件」源文件<code>必须</code>只使用 <code>&lt;?php</code> 和 <code>&lt;?=</code> 这两种标签。</li><li>「文件」源文件中php代码的编码格式<code>必须</code>只使用不带<code>字节顺序标记(BOM)</code>的<code>UTF-8</code>。</li><li>「类」<code>类名(class name)</code> <code>必须</code>使用<code>骆驼式(StudlyCaps)</code>写法。</li><li>「类」<code>类(class)</code>中的常量<code>必须</code>只由大写字母和<code>下划线(_)</code>组成。</li><li>「类」<code>方法名(method name)</code> <code>必须</code>使用<code>驼峰式(cameCase)</code>。</li><li>「文件」一个源文件<code>建议</code>只用来做声明（<code>类(class)</code>，<code>函数(function)</code>，<code>常量(constant)</code>等）或者只用来做一些引起副作用的操作（例如：输出信息，修改<code>.ini</code>配置等）,但<code>不建议</code>同时做这两件事。</li></ul><h2 id="PSR-2"><a href="#PSR-2" class="headerlink" title="PSR-2"></a>PSR-2</h2><blockquote><p>代码风格指南<br>针对 PSR-1 的继承和扩展</p></blockquote><ul><li>「缩进」代码<code>必须</code>使用4个空格来进行缩进，而不是用制表符。</li><li>「行」一行代码的长度<code>不建议</code>有硬限制；软限制<code>必须</code>为120个字符，<code>建议</code>每行代码80个字符或者更少；非空行<code>不可</code>有空格；一行<code>不可</code>多于一个语句.</li><li>「文件」纯 php 文件 <figure class="highlight plain"><figcaption><span>`必须` 省略;`必须`以空行结束</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 「命名空间」在`命名空间(namespace)`的声明下面`必须`有一行空行，并且在`导入(use)`的声明下面也`必须`有一行空行。</span><br><span class="line">- 「类」`类(class)`的左花括号`必须`放到其声明下面自成一行，右花括号则`必须`放到类主体下面自成一行。</span><br><span class="line">- 「方法」`方法(method)`的左花括号`必须`放到其声明下面自成一行，右花括号则`必须`放到方法主体的下一行。</span><br><span class="line">- 「属性|方法」所有的`属性(property)`和`方法(method)` `必须`有可见性声明；`抽象(abstract)`和`终结(final)`声明`必须`在可见性声明之前；而`静态(static)`声明`必须`在可见性声明之后。</span><br><span class="line">- 「关键字和常量」关键字和常量(true，false，null)`必须`小写</span><br><span class="line">- 「控制结构」在控制结构关键字的后面`必须`有一个空格；而`方法(method)`和`函数(function)`的关键字的后面`不可`有空格。</span><br><span class="line">- 「控制结构」控制结构的左花括号`必须`跟其放在同一行，右花括号`必须`放在该控制结构代码主体的下一行。</span><br><span class="line">- 「控制结构」控制结构的左括号之后`不可`有空格，右括号之前也`不可`有空格。</span><br><span class="line">- 「类」`不建议`使用`_`来表明方法和属性的保护性</span><br></pre></td></tr></table></figure></li></ul><p>&lt;?php<br>namespace Vendor\Package;</p><p>use FooInterface;<br>use BarClass as Bar;<br>use OtherVendor\OtherPackage\BazClass;</p><p>class Foo extends Bar implements<br>    FooInterface,<br>    Bar<br>{<br>    public function sampleFunction($a, $b = null)<br>    {<br>        if ($a === $b) {<br>            bar();<br>        } elseif ($a &gt; $b) {<br>            $foo-&gt;bar($arg1);<br>        } else {<br>            BazClass::bar($arg2, $arg3);<br>        }<br>    }</p><pre><code>final public static function bar(){   $foo-&gt;bar(        $longArgument,        $longerArgument,        $muchLongerArgument    );    $longArgs_shortVars = function (        $longArgument,        $longerArgument,        $muchLongerArgument = null    ) use ($var1) {       // body    };} public function aVeryLongMethodName(    ClassTypeHint $arg1,    &amp;$arg2,    array $arg3 = []) {    switch ($expr) {        case 0:            echo &apos;First case, with a break&apos;;            break;        case 1:            echo &apos;Second case, which falls through&apos;;            // no break        case 2:        case 3:        case 4:            echo &apos;Third case, return instead of break&apos;;            return;        default:            echo &apos;Default case&apos;;            break;    }    while ($expr) {        // structure body    }    do {        // structure body;    } while ($expr);    for ($i = 0; $i &lt; 10; $i++) {        // for body    }    foreach ($iterable as $key =&gt; $value) {        // foreach body    }    try {        // try body    } catch (FirstExceptionType $e) {        // catch body    } catch (OtherExceptionType $e) {        // catch body    }}</code></pre><p>}<br>```</p><h2 id="PSR-3"><a href="#PSR-3" class="headerlink" title="PSR-3"></a>PSR-3</h2><blockquote><p>日志接口<br>主要目标是让类库获得一个Psr\Log\LoggerInterface对象并能通过简单通用的方式来写日志  </p></blockquote><ol><li>8个等级（debug, info, notice, warning, error, critical, alert, emergency）</li><li>log 方法(等级，日志)；<ul><li>等级<code>必须</code>一致，否则<code>必须</code>抛出<code>Psr\Log\InvalidArgumentException</code></li><li>日志<code>必须</code>是字符串，或者是可<code>__toString</code>的对象</li></ul></li><li>….</li></ol><h1 id="代码检查工具"><a href="#代码检查工具" class="headerlink" title="代码检查工具"></a>代码检查工具</h1><h2 id="PHP-Mess-Detector"><a href="#PHP-Mess-Detector" class="headerlink" title="PHP Mess Detector"></a><a href="http://phpmd.org/" rel="external nofollow noopener noreferrer" target="_blank">PHP Mess Detector</a></h2><p>PHP项目体检工具，根据你设定的标准（如单一文件代码体积，未使用的参数个数，未使用的方法数）检查PHP代码，超出设定的标准时报警。</p><h2 id="PHP-Copy-Paste-Detector"><a href="#PHP-Copy-Paste-Detector" class="headerlink" title="PHP Copy Paste Detector"></a><a href="https://github.com/sebastianbergmann/phpcpd" rel="external nofollow noopener noreferrer" target="_blank">PHP Copy Paste Detector</a></h2><p>顾名思义，检查冗余代码的</p><h2 id="PHP-Dead-Code-Detector"><a href="#PHP-Dead-Code-Detector" class="headerlink" title="PHP Dead Code Detector"></a><a href="https://github.com/sebastianbergmann/phpdcd" rel="external nofollow noopener noreferrer" target="_blank">PHP Dead Code Detector</a></h2><p>看名字就知道了，检查从未被调用过的方法</p><h2 id="PHP-Code-Sniffer"><a href="#PHP-Code-Sniffer" class="headerlink" title="PHP Code Sniffer"></a><a href="http://pear.php.net/package/PHP_CodeSniffer" rel="external nofollow noopener noreferrer" target="_blank">PHP Code Sniffer</a></h2><h2 id="PHPLint"><a href="#PHPLint" class="headerlink" title="PHPLint"></a><a href="http://www.icosaedro.it/phplint/" rel="external nofollow noopener noreferrer" target="_blank">PHPLint</a></h2><h1 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h1><h2 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a><a href="http://jenkins-php.org/" rel="external nofollow noopener noreferrer" target="_blank">jenkins</a></h2><p>把上述工具以plugins形式整合起来</p><h2 id="xinc-phing"><a href="#xinc-phing" class="headerlink" title="xinc+phing"></a><a href="http://code.google.com/p/xinc/" rel="external nofollow noopener noreferrer" target="_blank">xinc+phing</a></h2><p>跟上述工具集成起来做持续集成后的自动化打包发布</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://github.com/hfcorriez/fig-standards" rel="external nofollow noopener noreferrer" target="_blank">PHP PSR代码标准中文版</a></li><li><a href="https://segmentfault.com/q/1010000000119048" rel="external nofollow noopener noreferrer" target="_blank">PHP中有什么好的代码自动检查工具吗</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;PSR&quot;&gt;&lt;a href=&quot;#PSR&quot; class=&quot;header
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="程序语言" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="PHP" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/PHP/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="PSR" scheme="http://yoursite.com/tags/PSR/"/>
    
  </entry>
  
  <entry>
    <title>UML</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/uml/"/>
    <id>http://yoursite.com/技术之路/面向对象/uml/</id>
    <published>2016-02-28T15:22:00.000Z</published>
    <updated>2017-11-08T16:40:10.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="UML-类图中的关系"><a href="#UML-类图中的关系" class="headerlink" title="UML 类图中的关系"></a>UML 类图中的关系</h1><h2 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h2><p>用于表示一类对象与另一类对象之间有联系<br>程序中，通常将一个类的对象作为另一个类的成员变量</p><h3 id="双向关联"><a href="#双向关联" class="headerlink" title="双向关联"></a>双向关联</h3><p><img src="/images/2017/11/shuangxiang.jpg" alt="shuangxiang"></p><h3 id="单向关联"><a href="#单向关联" class="headerlink" title="单向关联"></a>单向关联</h3><p><img src="/images/2017/11/danxiang.jpg" alt="danxiang"></p><h3 id="自关联"><a href="#自关联" class="headerlink" title="自关联"></a>自关联</h3><blockquote><p>在系统中可能会存在一些类的属性对象类型为该类本身，这种特殊的关联关系称为自关联</p></blockquote><p><img src="/images/2017/11/ziguanlian.jpg" alt="ziguanlian"></p><h3 id="多重性关联"><a href="#多重性关联" class="headerlink" title="多重性关联"></a>多重性关联</h3><blockquote><p>表示两个关联对象在数量上的对应关系</p></blockquote><p><img src="/images/2017/11/duochongguanlian.jpg" alt="duochongguanlian"></p><table><thead><tr><th>表示方式</th><th>多重性说明</th></tr></thead><tbody><tr><td>1..1</td><td>表示另一个类的一个对象只与该类的一个对象有关系</td></tr><tr><td>0..*</td><td>表示另一个类的一个对象与该类的零个或多个对象有关系</td></tr><tr><td>1..*</td><td>表示另一个类的一个对象与该类的一个或多个对象有关系</td></tr><tr><td>0..1</td><td>表示另一个类的一个对象没有或只与该类的一个对象有关系</td></tr><tr><td>m..n</td><td>表示另一个类的一个对象与该类最少m，最多n个对象有关系 (m≤n)</td></tr></tbody></table><h2 id="聚合关系"><a href="#聚合关系" class="headerlink" title="聚合关系"></a>聚合关系</h2><blockquote><p>整体（整体对象）和部分（成员对象）可以分开独立存在</p></blockquote><p><img src="/images/2017/11/juhe.jpg" alt="juhe"></p><p>这里表示的是：汽车和发动机<br>还有个更形象的比喻：雁群和雁子</p><blockquote><p>程序中，成员对象通常作为构造方法、Setter方法或业务方法的参数注入到整体对象中</p></blockquote><h2 id="组合关系"><a href="#组合关系" class="headerlink" title="组合关系"></a>组合关系</h2><blockquote><p>整体和部分不可分开，有相同的生命周期</p></blockquote><p><img src="/images/2017/11/zuhe.jpg" alt="zuhe"></p><p>这里表示的是：头和嘴<br>还有个更形象的比喻：雁子和翅膀</p><blockquote><p>程序中，通常在整体类的构造方法中直接实例化成员类</p></blockquote><h2 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h2><blockquote><p>表示一个事物「使用」另一个事物时使用依赖关系</p></blockquote><p><img src="/images/2017/11/yilai.jpg" alt="yilai"></p><blockquote><p>程序中，依赖关系体现在某个类的方法使用另一个类的对象作为参数  </p><ol><li>将一个类的对象作为另一个类中方法的参数  </li><li>在一个类的方法中将另一个类的对象作为其局部变量  </li><li>在一个类的方法中调用另一个类的静态方法</li></ol></blockquote><h2 id="泛化关系"><a href="#泛化关系" class="headerlink" title="泛化关系"></a>泛化关系</h2><blockquote><p>泛化关系就是继承关系</p></blockquote><p><img src="/images/2017/11/fanhua.jpg" alt="fanhua"></p><h2 id="接口与实现关系"><a href="#接口与实现关系" class="headerlink" title="接口与实现关系"></a>接口与实现关系</h2><p><img src="/images/2017/11/jiekouyushixian.jpg" alt="jiekouyushixian"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>各种关系的强弱顺序：</p><blockquote><p>泛化= 实现&gt; 组合&gt; 聚合&gt; 关联&gt; 依赖</p></blockquote><p><img src="/images/2017/11/uml.png" alt="uml"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://blog.csdn.net/lovelion/article/details/7842898" rel="external nofollow noopener noreferrer" target="_blank">深入浅出UML类图（二）</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7843308" rel="external nofollow noopener noreferrer" target="_blank">深入浅出UML类图（三）</a></li><li><a href="http://blog.csdn.net/tianhai110/article/details/6339565" rel="external nofollow noopener noreferrer" target="_blank">UML类图几种关系的总结</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;UML-类图中的关系&quot;&gt;&lt;a href=&quot;#UML-类图中的关系&quot;
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="uml" scheme="http://yoursite.com/tags/uml/"/>
    
  </entry>
  
  <entry>
    <title>设计原则</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/oo-principle/"/>
    <id>http://yoursite.com/技术之路/面向对象/oo-principle/</id>
    <published>2016-02-21T06:04:00.000Z</published>
    <updated>2017-11-08T16:40:01.889Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在面对一个复杂项目的时候，为了提高项目的 <strong>扩展性</strong>、 <strong>复用性</strong>、 <strong>可维护性</strong>，我们往往会进行抽象设计；而这些原则是从许多成功设计方案中总结出的指导性原则，为我们学习设计模式和设计系统提供了很好的帮助。</p><h1 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h1><table><thead><tr><th>设计原则名称</th><th>定义</th><th>使用频率</th></tr></thead><tbody><tr><td>开闭原则<br>(Open-Closed Principle, OCP)</td><td>一个软件实体对扩展开放，而对修改关闭</td><td>★★★★★</td></tr><tr><td>里氏代换原则<br>(Liskov Substitution Principle, LSP)</td><td>所有引用基类对象的地方能够透明地使用其子类的对象</td><td>★★★★★</td></tr><tr><td>依赖倒转原则<br>(Dependence  Inversion Principle, DIP)</td><td>抽象不应该依赖于细节，细节应该依赖于抽象</td><td>★★★★★</td></tr><tr><td>单一职责原则<br>(Single Responsibility Principle, SRP)</td><td>一个类只负责一个功能领域中的相应职责</td><td>★★★★☆</td></tr><tr><td>合成复用原则<br>(Composite Reuse Principle, CRP)</td><td>尽量使用对象组合，而不是继承来达到复用的目的</td><td>★★★★☆</td></tr><tr><td>迪米特法则<br>(Law of Demeter, LoD)</td><td>一个软件实体应当尽可能少地与其他实体发生相互作用</td><td>★★★☆☆</td></tr><tr><td>接口隔离原则<br>(Interface Segregation Principle, ISP)</td><td>使用多个专门的接口，而不使用单一的总接口</td><td>★★☆☆☆</td></tr></tbody></table><h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><p>「软件实体」可以指一个软件模块、一个由多个类组成的局部结构或一个独立的类。</p><p><strong>作用</strong></p><p>在项目的迭代过程中，出现新的需求或者需求改动时，在不修改现有代码的情况下，就可扩展新的行为。(总目标)</p><p><strong>如何做？</strong></p><blockquote><p>思考增加需求时，如何实现？</p></blockquote><ul><li><p><strong>抽象化是开闭原则的关键</strong><br>把 <strong>可能会发生变化的地方</strong> （ <strong>要对需求的变更有预见性</strong> ）放到抽象类中，具体的实现在子类中完成。如果需要修改系统的行为，无须对抽象层进行任何改动，只需要增加新的具体类来实现新的业务功能即可。</p></li><li><p><strong>避免过度使用</strong><br>遵循开闭原则，通常会引入新的抽象层次， <strong>增加代码的复杂度</strong>。需要把注意力集中在设计中 <strong>最有可能改变的地方</strong> ，然后应用开闭原则。每个地方都采用开闭原则，是一种浪费，也没必要，还会导致代码变得复杂且难以理解。</p></li></ul><p><strong>具体实例</strong></p><ul><li>多图表-柱状、饼状[2]</li></ul><h2 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h2><p><strong>作用</strong></p><p>里氏代换原则是实现开闭原则的重要方式之一；保证整个继承体系不被破坏。</p><p><strong>如何做？</strong></p><blockquote><p>子类不能重新定义父类的方法/属性</p></blockquote><ul><li><strong>子类的所有方法必须在父类中声明</strong>，或子类必须实现父类中声明的所有方法</li><li><strong>尽量把父类设计为抽象类或者接口</strong>，让子类继承父类或实现父接口，并实现在父类中声明的方法。（运行时，子类实例替换父类实例）</li></ul><p><strong>具体实例</strong></p><ul><li>给不同等级的客户发送邮件[3]</li></ul><h2 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h2><p><strong>作用</strong></p><p>依赖倒转原则就是面向对象设计的主要实现机制之一；它是系统抽象化的具体实现。<br>依赖倒置原则可以降低类之间的耦合性，提高系统的稳定性，降低修改程序造成的风险。</p><p><strong>如何做？</strong></p><blockquote><p>要针对接口编程，而不是针对实现编程</p></blockquote><ul><li><strong>传递参数时或在关联关系中，尽量引用层次高的抽象层类</strong>；使用 <strong>接口和抽象类</strong> 进行变量类型声明、参数类型声明等使用继承时，遵循里氏替换原则</li><li><strong>针对抽象层编程</strong>，而将具体类的对象通过 <strong>[依赖注入]</strong> 的方式注入到其他对象中;[依赖注入]是指当一个对象要与其他对象发生依赖关系时，通过抽象来注入所依赖的对象；主要有以下三种方式：构造注入、设值注入（Setter注入）、接口注入</li></ul><p><strong>具体实例</strong></p><ul><li>存储不同格式的文件到数据库[4]</li></ul><h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><p><strong>作用</strong></p><p>单一职责原则是实现 <strong>高内聚、低耦合</strong> 的指导方针；提高类的复用性。<br>当一个模块或一个类被设计成只支持一组相关功能时，我们说它具有「高内聚」。</p><p><strong>如何做？</strong></p><blockquote><p>发现类的不同职责并将其分离；一个类应该只有一个引起变化的原因</p></blockquote><ul><li>将不同的职责(变化原因)封装在不同的类中</li><li>如果多个职责总是同时发生改变则可将它们封装在同一类中</li><li>随着系统的成长，随时查看某个类是否超过一个变化原因,</li></ul><p><strong>具体实例</strong></p><ul><li>客户关系管理[8]</li></ul><h2 id="合成复用原则"><a href="#合成复用原则" class="headerlink" title="合成复用原则"></a>合成复用原则</h2><p><strong>作用</strong></p><p>程序设计中，确定复用是用继承还是组合</p><p><strong>如何做？</strong></p><blockquote><p>要判断使用组合/聚合关系（关联关系）还是继承</p></blockquote><p>组合/聚合</p><blockquote><p>优先考虑；两个类之间是“Has-A”的关系应使用组合或聚合；Has-A 表示某一个角色具有某一项责任</p></blockquote><ul><li><strong>优点：</strong><ul><li>“黑盒”复用，因为被包含对象的内部细节对外是不可见（封装性好）</li><li>通过获取具有相同类型的对象引用，可以在运行期间动态地定义（对象的）组合。</li></ul></li><li><strong>缺点：</strong> 对象过多，不易理解</li></ul><p>继承</p><blockquote><p>两个类之间是“Is-A”关系可使用继承；Is-A 表示一个类是另一个类的”一种”</p></blockquote><ul><li><strong>优点：</strong> 有效使用继承会有助于对问题的理解，降低复杂度（严格遵循里氏代换原则）</li><li><strong>缺点：</strong><ul><li>滥用继承反而会增加系统构建和维护的难度以及系统的复杂度</li><li>“白盒”复用，因为父类的内部细节对于子类而言通常是可见的。（封装性差）</li><li>从基类继承而来的实现是静态的，不可能在运行时发生改变，没有足够的灵活性</li><li>继承只能在有限的环境中使用（如类没有声明为不能被继承）</li></ul></li></ul><p><strong>具体实例</strong></p><ul><li>数据保存在不同的数据库中[6]</li></ul><hr><h2 id="迪米特法则"><a href="#迪米特法则" class="headerlink" title="迪米特法则"></a>迪米特法则</h2><p><strong>作用</strong><br>降低系统的耦合度，使类与类之间保持松散的耦合关系。</p><p><strong>如何做？</strong></p><blockquote><p>思考软件实体之间的交互；确定只和“朋友”打交道</p></blockquote><ol><li>不要和“陌生人”说话、只与你的直接朋友通信；对于一个对象，其朋友包括以下几类：  <ul><li>当前 <strong>对象本身</strong> (this)；</li><li><strong>参数对象</strong>：以参数形式传入到当前对象方法中的对象；</li><li>当前对象的 <strong>成员对象</strong>；如果当前对象的成员对象是一个集合，那么集合中的元素也都是朋友；</li><li>当前对象所 <strong>创建的对象</strong></li></ul></li></ol><ol><li><p>应该尽量减少对象之间的交互</p><ul><li>如果两个对象之间不必彼此直接通信，那么这两个对象就不应当发生任何直接的相互作用</li><li>如果其中的一个对象需要调用另一个对象的某一个方法的话，可以通过第三者转发这个调用</li></ul></li><li><p>在类之间的设计上，应当尽量创建松耦合的类，类之间的耦合度越低，就越有利于复用，一个处在松耦合中的类一旦被修改，不会对关联的类造成太大波及</p></li><li>在单个类的结构设计上，每一个类都应当尽量降低其成员变量和成员函数的访问权限，一个类型应当尽量设计成不变类；在对其他类的引用上，一个对象对其他对象的引用应当降到最低</li></ol><p><strong>具体实例</strong></p><ul><li>一个多操作的窗口[7]</li></ul><h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p><strong>作用</strong></p><p>系统解开耦合，从而容易重构，更改和重新部署</p><p><strong>如何做？</strong></p><blockquote><p>接口仅仅提供客户端需要的行为，客户端不需要的行为则隐藏起来</p></blockquote><ul><li><p><strong>接口职责要单一</strong><br>将大接口中的方法根据 <strong>职责不同</strong> 分别放在不同的小接口中，以确保每个接口都承担某一单一角色。</p></li><li><p><strong>为不同的客户端提供宽窄不同的接口</strong><br>接口应该尽量细化，同时接口中的方法应该尽量少，每个接口中只包含一个客户端（如子模块或业务逻辑类）所需的方法即可。</p></li></ul><p>注意：在使用接口隔离原则时，我们需要注意控制接口的粒度。接口太小会导致系统中接口泛滥，不利于维护；接口太大将违背接口隔离原则，灵活性较差，使用起来很不方便。</p><blockquote><p>一般而言，接口中仅包含为某一类用户定制的方法即可，不应该强迫客户依赖于那些它们不用的方法</p></blockquote><p><strong>具体实例</strong></p><ul><li>将文件内容转为不同的数据格式存储[5]</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>不要过度使用设计模式，一切从简。</p></blockquote><table><thead><tr><th>设计原则</th><th>说明</th></tr></thead><tbody><tr><td>开闭原则</td><td>对扩展开放，对修改关闭</td></tr><tr><td>里氏替换原则</td><td>不要破坏继承体系</td></tr><tr><td>依赖倒置原则</td><td>面向接口编程</td></tr><tr><td>单一职责原则</td><td>类要职责单一</td></tr><tr><td>接口隔离原则</td><td>接口要精简单一</td></tr><tr><td>迪米特法则</td><td>软件实体间要降低耦合</td></tr><tr><td>合成复用原则</td><td>复用时要合理使用继承和组合</td></tr></tbody></table><p>设计原则之间的关系，个人总结如下：  </p><p><img src="/images/2017/11/oop.jpg" alt="oop"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://blog.csdn.net/lovelion/article/details/7536532" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则概述</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7537584" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之开闭原则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7540445" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之里氏代换原则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7562783" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之依赖倒转原则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7562842" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之接口隔离原则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7563441" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之合成复用原则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7563445" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之迪米特法则</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/7536542" rel="external nofollow noopener noreferrer" target="_blank">面向对象设计原则之单一职责原则</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="OO" scheme="http://yoursite.com/tags/OO/"/>
    
  </entry>
  
  <entry>
    <title>Pandoc</title>
    <link href="http://yoursite.com/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/pandoc/"/>
    <id>http://yoursite.com/开源软件简析/pandoc/</id>
    <published>2016-01-04T00:00:00.000Z</published>
    <updated>2017-11-08T15:59:13.400Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Pandoc"><a href="#Pandoc" class="headerlink" title="Pandoc"></a>Pandoc</h1><p>pandoc 是一个 markdown 文档转换工具，可以把 markdown 转换为诸多的格式，可以定制格式，编写过滤器等。<br>pandoc 支持的格式，可以参考官网：<a href="http://www.pandoc.org" rel="external nofollow noopener noreferrer" target="_blank">http://www.pandoc.org</a></p><p>pandoc 的语法，请看：<a href="http://pandoc.org/README.html" rel="external nofollow noopener noreferrer" target="_blank">官网英文</a> /  <a href="http://elvisw.com/pandoc-markdown.html" rel="external nofollow noopener noreferrer" target="_blank">中文翻译</a></p><p>pandoc 过滤器编写，请看：<a href="https://github.com/jgm/pandoc/wiki/Pandoc-Filters" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jgm/pandoc/wiki/Pandoc-Filters</a></p><h1 id="如何自定义样式"><a href="#如何自定义样式" class="headerlink" title="如何自定义样式"></a>如何自定义样式</h1><h2 id="Html-样式"><a href="#Html-样式" class="headerlink" title="Html 样式"></a>Html 样式</h2><p>Html 可以指定 css 文件进行样式修改</p><p><strong>方式一：引入 css 文件</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;<span class="attribute">background</span>:<span class="number">#efefef</span>;&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">caption</span>&#123;<span class="attribute">text-align</span>:left; <span class="attribute">background-color</span>:<span class="number">#fff</span>; <span class="attribute">line-height</span>:<span class="number">2em</span>; <span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">font-weight</span>:bold; &#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>&#123;<span class="attribute">text-align</span>:left; <span class="attribute">font-weight</span>:bold;<span class="attribute">height</span>:<span class="number">26px</span>; <span class="attribute">line-height</span>:<span class="number">26px</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span>&#123;<span class="attribute">height</span>:<span class="number">20px</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;<span class="attribute">background-color</span>:<span class="number">#fff</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc -s -c [cssfile] [mdfile] -o [htmlname]</span><br></pre></td></tr></table></figure><p><strong>方式二：页面内置样式（写入 header）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;<span class="attribute">background</span>:<span class="number">#efefef</span>;&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">caption</span>&#123;<span class="attribute">text-align</span>:left; <span class="attribute">background-color</span>:<span class="number">#fff</span>; <span class="attribute">line-height</span>:<span class="number">2em</span>; <span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">font-weight</span>:bold; &#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>&#123;<span class="attribute">text-align</span>:left; <span class="attribute">font-weight</span>:bold;<span class="attribute">height</span>:<span class="number">26px</span>; <span class="attribute">line-height</span>:<span class="number">26px</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span>&#123;<span class="attribute">height</span>:<span class="number">20px</span>; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#CCC</span>;<span class="attribute">background-color</span>:<span class="number">#fff</span>;&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc -s -H [cssfile] [mdfile] -o [htmlname]</span><br></pre></td></tr></table></figure><h2 id="Docx-样式"><a href="#Docx-样式" class="headerlink" title="Docx 样式"></a>Docx 样式</h2><p>pandoc 可以使用 docx 模板进行渲染（注意：模板是修改样式，而不是内容）</p><blockquote><p>可以把自己修改后的样式保存为「word 模板」</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc --reference-docx=[模板路径] [mdfile] -o [docxname]</span><br></pre></td></tr></table></figure><h3 id="Docx-模板"><a href="#Docx-模板" class="headerlink" title="Docx 模板"></a>Docx 模板</h3><p>分享自己的 docx 模板（不断更新中） <a href="http://pan.baidu.com/s/1pLrNOq3" rel="external nofollow noopener noreferrer" target="_blank">技术文档docx模板</a></p><h3 id="TeX-模板"><a href="#TeX-模板" class="headerlink" title="TeX 模板"></a>TeX 模板</h3><p>见 <a href="https://www.phodal.com/blog/pandoc-template-tex-pandoc/" rel="external nofollow noopener noreferrer" target="_blank">Phodal Huang 毕业设计模板</a> <a href="http://pan.baidu.com/s/1eQX70mm" rel="external nofollow noopener noreferrer" target="_blank">(百度盘备份)</a></p><p>使用方法：需要保存为*.docx 文件，然后使用 <code>--template</code> 选项指定模板</p><h1 id="生成-Html-幻灯片"><a href="#生成-Html-幻灯片" class="headerlink" title="生成 Html 幻灯片"></a>生成 Html 幻灯片</h1><p>利用 markdown 直接生成 <a href="https://en.wikipedia.org/wiki/Web-based_slideshow" rel="external nofollow noopener noreferrer" target="_blank">web-based slideshow</a>；可以自定义 css ，足够灵活。</p><h2 id="支持那些幻灯片框架？"><a href="#支持那些幻灯片框架？" class="headerlink" title="支持那些幻灯片框架？"></a>支持那些幻灯片框架？</h2><p>pandoc 包含5种 html 幻灯片框架：</p><ul><li><a href="https://github.com/paulrouget/dzslides" rel="external nofollow noopener noreferrer" target="_blank">DZSlides</a></li><li><a href="http://www.w3.org/Talks/Tools/Slidy2/" rel="external nofollow noopener noreferrer" target="_blank">Slidy</a></li><li><a href="http://meyerweb.com/eric/tools/s5/" rel="external nofollow noopener noreferrer" target="_blank">S5</a></li><li><a href="http://goessner.net/articles/slideous/slideous.html" rel="external nofollow noopener noreferrer" target="_blank">Slideous</a></li><li><a href="http://lab.hakim.se/reveal-js" rel="external nofollow noopener noreferrer" target="_blank">reveal.js</a></li></ul><p>实际上可以使用任何幻灯片框架（比如<a href="https://code.google.com/p/io-2012-slides/" rel="external nofollow noopener noreferrer" target="_blank">Google I/O HTML5 slide template</a>），只要让Pandoc在渲染HTML时使用你指定的模板即可.</p><h2 id="生成默认模板的幻灯片"><a href="#生成默认模板的幻灯片" class="headerlink" title="生成默认模板的幻灯片"></a>生成默认模板的幻灯片</h2><p>pandoc 内置 dzslides 框架</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc [*.md] -o [*.html] -t dzslides -s</span><br></pre></td></tr></table></figure><h2 id="可选配置"><a href="#可选配置" class="headerlink" title="可选配置"></a>可选配置</h2><h3 id="渐进显示"><a href="#渐进显示" class="headerlink" title="渐进显示"></a>渐进显示</h3><ul><li>生成幻灯片时加入 <code>-i</code> 选项，用于控制列表的显示效果（逐条渐入）</li><li>两段文字显示之间的人为停顿: <code>...</code></li></ul><h3 id="强制分割"><a href="#强制分割" class="headerlink" title="强制分割"></a>强制分割</h3><p>默认是2级标题分割。<br>可以使用<code>-----------------</code>强制分割;也可以使用 <code>--slide-level</code> 选项覆盖默认的 Slide level</p><h3 id="代码高亮风格"><a href="#代码高亮风格" class="headerlink" title="代码高亮风格"></a>代码高亮风格</h3><p>控制代码高亮风格的选项有：</p><ul><li>–highlight-style pygments</li><li>–highlight-style kate</li><li>–highlight-style monochrome</li><li>–highlight-style espresso</li><li>–highlight-style haddock</li><li>–highlight-style tango</li><li>–highlight-style zenburn</li></ul><h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><p>这里着重分析下 <strong>reveal.js</strong> ；为什么？因为只有它有提示板。</p><h3 id="安装reveal-js"><a href="#安装reveal-js" class="headerlink" title="安装reveal.js"></a>安装reveal.js</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hakimel/reveal.js</span><br></pre></td></tr></table></figure><h3 id="生成幻灯片-Html"><a href="#生成幻灯片-Html" class="headerlink" title="生成幻灯片 Html"></a>生成幻灯片 Html</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pandoc [*.md]  -o [*.html] -t revealjs -s [-V theme=beige]</span><br></pre></td></tr></table></figure><p>支持的样式：</p><ul><li>default：（默认）深灰色背景，白色文字</li><li>beige：米色背景，深色文字</li><li>sky：天蓝色背景，白色细文字</li><li>night：黑色背景，白色粗文字</li><li>serif：浅色背景，灰色衬线文字</li><li>simple：白色背景，黑色文字</li><li>solarized：奶油色背景，深青色文字</li></ul><h3 id="提示板"><a href="#提示板" class="headerlink" title="提示板"></a>提示板</h3><p>按 s 触发；</p><p>增加小抄：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"notes"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  * 这里是提示1</span><br><span class="line">  * 这里是提示2</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://linux.cn/article-4080-1.html" rel="external nofollow noopener noreferrer" target="_blank">Markdown+Pandoc→HTML幻灯片速成</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Pandoc&quot;&gt;&lt;a href=&quot;#Pandoc&quot; class=&quot;
      
    
    </summary>
    
      <category term="开源软件简析" scheme="http://yoursite.com/categories/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%AE%80%E6%9E%90/"/>
    
    
      <category term="pandoc" scheme="http://yoursite.com/tags/pandoc/"/>
    
      <category term="ppt" scheme="http://yoursite.com/tags/ppt/"/>
    
      <category term="doc" scheme="http://yoursite.com/tags/doc/"/>
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>GitFlow</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/GIT/git-flow/"/>
    <id>http://yoursite.com/技术之路/GIT/git-flow/</id>
    <published>2016-01-02T09:06:00.000Z</published>
    <updated>2017-11-08T16:40:32.018Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目前收集到的工作流有以下几种，其中最常用的是 Gitflow 和 Forking + Pull request   </p><h1 id="Git工作流"><a href="#Git工作流" class="headerlink" title="Git工作流"></a>Git工作流</h1><h2 id="集中式"><a href="#集中式" class="headerlink" title="集中式"></a>集中式</h2><p><img src="/images/2017/11/git-svn.png" alt="git-svn"></p><ol><li>svn 形式的代码管理</li><li>所有的代码都在 master 分支上开发（线性开发）</li></ol><h2 id="功能分支"><a href="#功能分支" class="headerlink" title="功能分支"></a>功能分支</h2><p><img src="/images/2017/11/git-branch.png" alt="git-branch"></p><ol><li>以集中式工作流为基础，不同的是新功能在新分支上开发</li><li>开发完毕发起 pull request</li><li>讨论通过后合并到 master</li></ol><h2 id="Gitflow"><a href="#Gitflow" class="headerlink" title="Gitflow"></a>Gitflow</h2><p><img src="/images/2017/11/git-flow.png" alt="git-flow"></p><h3 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h3><p>2010 年初，荷兰的程序员 Vincent Driessen 在他自己的博客 <a href="http://nvie.com/" rel="external nofollow noopener noreferrer" target="_blank">http://nvie.com/</a> 发表了一篇文章 《A successful Git branching model》</p><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><ol><li>在功能分支的基础上，增加了维护和开发的便利性</li><li>两个长期分支：master 和 develop；三个短期分支：feature，release，hotfix</li></ol><h3 id="5个分支说明"><a href="#5个分支说明" class="headerlink" title="5个分支说明"></a>5个分支说明</h3><ul><li>master 分支只做发布</li><li>develop 分支做开发功能集成</li><li>feature 分支来自 develop 分支，用于新特性开发，被合并到 develop 分支</li><li>release 分支来自 develop 分支，用于预发布与测试，被合并到 master 分支和 develop 分支</li><li>hotfix 分支来自 master 分支，用于修改线上bug，被合并回 master 分支 和 develop 分支/release 分支</li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git flow feature start  // 开始一个特性的开发</span><br><span class="line">git flow feature finish // 完成一个特性的开发</span><br><span class="line">git flow release start // 开始一次 release</span><br><span class="line">git flow release finish // 完成一次 release</span><br><span class="line">git flow hotfix start // 开始一个线上bug修复</span><br><span class="line">git flow hotfix finish // 完成一个线上bug修复</span><br></pre></td></tr></table></figure><blockquote><p>详情见 git flow</p></blockquote><h2 id="Forking-Pull-request"><a href="#Forking-Pull-request" class="headerlink" title="Forking + Pull request"></a>Forking + Pull request</h2><ol><li>利用分支合并，方便接受其他贡献者的提交，而无须开放项目权限</li><li>贡献者 push 自己的代码到自己的服务端仓库，发起 pull request</li><li>项目的维护者review 后合并</li></ol><blockquote><p>github，osc 等都使用此种工作流</p></blockquote><h3 id="本地添加远程项目"><a href="#本地添加远程项目" class="headerlink" title="本地添加远程项目"></a>本地添加远程项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add [upstream-name] [upstream-url]</span><br></pre></td></tr></table></figure><h3 id="pull-request的注意事项"><a href="#pull-request的注意事项" class="headerlink" title="pull request的注意事项"></a>pull request的注意事项</h3><ol><li><p>base fork 与 head fork 的区别  </p><p><strong>base fork</strong> : 请求 pull requeat 的分支，通常是被 fork 的分支（维护者）； <strong>head fork</strong> ：希望被合并的分支，通常是自己fork 的分支（贡献者）</p></li><li><p>fork 的项目和原有项目保持同步  </p></li></ol><p><strong>方式1：分步处理</strong></p><p>需要预览和对比，则使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote update [upstream-name]</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line">$ git rebase [upstream/branch-name]</span><br></pre></td></tr></table></figure><p>​<strong>方式2：一步处理</strong></p><p>不需要预览则使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase [upstream-name] [branch-name]</span><br></pre></td></tr></table></figure><p><strong>方式3：脚本处理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">gup() &#123;</span><br><span class="line">  local br</span><br><span class="line">  br=\`git branch 2&gt; /dev/null|\\grep &apos;^*&apos;|sed -e &apos;s/..//;s/\\n//&apos;\`</span><br><span class="line">  tainted=\`git status --porcelain | \\grep -v &apos;^\\?\\?&apos;\`</span><br><span class="line">  if [[ $br == master ]]; then</span><br><span class="line">    if [[ $tainted == &apos;&apos; ]]; then</span><br><span class="line">      echo git stash</span><br><span class="line">      git stash</span><br><span class="line">    fi</span><br><span class="line">    echo git fetch</span><br><span class="line">    git fetch</span><br><span class="line">    echo git rebase FETCH_HEAD $br</span><br><span class="line">    git rebase FETCH_HEAD $br</span><br><span class="line">  else</span><br><span class="line">    if [[ -n $br ]]; then</span><br><span class="line">      if [[ $tainted == &apos;&apos; ]]; then</span><br><span class="line">        echo git stash</span><br><span class="line">        git stash</span><br><span class="line">      fi</span><br><span class="line">      echo git pull --rebase origin $br</span><br><span class="line">      git pull --rebase origin $br</span><br><span class="line">    else</span><br><span class="line">      echo seems not in any branch</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方式4：使用 github 等自带的页面处理</strong></p><blockquote><p><strong>base fork</strong> 选择自己的 fork 分支（贡献者）； <strong>head fork</strong> 选择被 fork 的分支（维护者）；然后发起 pull request</p></blockquote><h3 id="使用-merge-还是-rebase？"><a href="#使用-merge-还是-rebase？" class="headerlink" title="使用 merge 还是 rebase？"></a>使用 merge 还是 rebase？</h3><ul><li>开发以 pull request + review 为主的模式，merge 最合适</li><li>第一次合并/单人开发/同步上游改动时，rebase 最合适</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="http://www.juvenxu.com/2010/11/28/a-successful-git-branching-model/" rel="external nofollow noopener noreferrer" target="_blank">一个成功的 Git 分支模型</a></li><li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html" rel="external nofollow noopener noreferrer" target="_blank">git-flow 备忘清单</a></li><li><a href="https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md" rel="external nofollow noopener noreferrer" target="_blank">Git Workflows and Tutorials</a></li><li><a href="https://ruby-china.org/topics/22748" rel="external nofollow noopener noreferrer" target="_blank">git 里 push request 注意事项</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;目前收集到的工作流有以下几种，其中最常用的是 Gitflow 和 Forki
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="GIT" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/GIT/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Web Servive</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/web-servive/"/>
    <id>http://yoursite.com/技术之路/架构设计/web-servive/</id>
    <published>2015-12-24T16:05:00.000Z</published>
    <updated>2017-11-08T16:39:47.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="What"><a href="#What" class="headerlink" title="What"></a>What</h1><p>Web服务是一种服务导向架构的技术，通过标准的Web协议提供服务，目的是保证不同平台的应用服务可以互操作。  </p><h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><p>以下观点来自维基百科：  </p><ol><li>重复使用的应用程序组件</li><li>连接现有的软件，在不同的应用程序和平台之间交换数据</li></ol><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><p>有三种普遍实现方式：  </p><h2 id="远程过程调用（RPC）"><a href="#远程过程调用（RPC）" class="headerlink" title="远程过程调用（RPC）"></a>远程过程调用（RPC）</h2><blockquote><p>面向动作；目前有很多开源的 RPC 框架：YAR、GRPC、Thrift 等</p></blockquote><p>RPC式WEB服务实质上是利用一个简单的映射，以把用户请求直接转化成为一个特定语言编写的函数或方法.  </p><h2 id="服务导向架构（SOA-P-）"><a href="#服务导向架构（SOA-P-）" class="headerlink" title="服务导向架构（SOA[P]）"></a>服务导向架构（SOA[P]）</h2><blockquote><p>面向消息；</p></blockquote><p>遵从服务导向架构（Service-oriented architecture，SOA）概念来构筑WEB服务，在服务导向架构中，通讯由消息驱动，而不再是某个动作（方法调用）。 作为与RPC方式的最大差别，SOA方式更加关注如何去连接服务而不是去特定某个实现的细节。  </p><p>通常使用 SOAP 风格；由 UDDI、 SOAP 和 WSDL 构成；他们之间的关系如下图：<br>      <img src="/images/2017/11/web-service.png" alt="web-service"></p><ul><li><strong>SOAP</strong><br>一个基于XML的可扩展消息信封格式，需同时绑定一个网络传输协议。这个协议通常是HTTP或HTTPS，但也可能是SMTP或XMPP。  </li><li><strong>WSDL</strong><br>一个XML格式文档，用以描述服务端口访问方式和使用协议的细节。通常用来辅助生成服务器和客户端代码及配置信息。    </li><li><strong>UDDI</strong><br>一个用来发布和搜索WEB服务的协议，应用程序可借由此协议在设计或运行时找到目标WEB服务。  </li></ul><h2 id="表述性状态转移（REST）"><a href="#表述性状态转移（REST）" class="headerlink" title="表述性状态转移（REST）"></a>表述性状态转移（REST）</h2><blockquote><p>面向资源；</p></blockquote><p>表述性状态转移式（Representational state transfer，REST），是一种架构风格，把接口限定在一组广为人知的标准动作中（比如HTTP的GET、POST、PUT、DELETE）以供调用。  </p><p><strong>REST 的 基本特征：</strong></p><ol><li>客户端和服务器结构</li><li>连接协议具有无状态性</li><li>能够利用Cache机制增进性能</li><li>层次化的系统</li></ol><p><strong>REST 的三要素：</strong></p><ol><li>唯一的资源标识</li><li>简单的方法</li><li>一定的表达方式  </li></ol><p>三要素关系图：<br><img src="/images/2017/11/rest.png" alt="REST"></p><p>REST 是以 <strong>资源</strong> 为中心, <strong>名词</strong> 即资源的地址, <strong>动词</strong> 即施加于名词上的一些有限操作, <strong>表达</strong> 是对各种资源形态的抽象.<br>以HTTP为例, 名词即为URI(统一资源标识), 动词包括POST, GET, PUT, DELETE等(还有其它不常用的2个,所以 整个动词集合是有限的), 资源的形态(如text, html, image, pdf等)</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://zh.wikipedia.org/zh-cn/Web服务" rel="external nofollow noopener noreferrer" target="_blank">Web服务-维基百科</a></li><li><a href="https://zh.wikipedia.org/wiki/Web_services#.E4.BB.80.E4.B9.88.E6.98.AF_SOAP" rel="external nofollow noopener noreferrer" target="_blank">Web services-维基百科</a></li><li><a href="https://zh.wikipedia.org/wiki/面向服务的架构" rel="external nofollow noopener noreferrer" target="_blank">面向服务的体系结构</a></li><li><a href="https://zh.wikipedia.org/wiki/REST" rel="external nofollow noopener noreferrer" target="_blank">REST</a></li><li><a href="https://zh.wikipedia.org/wiki/遠程過程調用" rel="external nofollow noopener noreferrer" target="_blank">远程过程调用</a></li><li><a href="http://blog.csdn.net/x_yp/article/details/6231766" rel="external nofollow noopener noreferrer" target="_blank">Webservice学习笔记五，Web Service实践之REST vs RPC</a></li><li><a href="http://blog.csdn.net/x_yp/article/details/6231918" rel="external nofollow noopener noreferrer" target="_blank">Webservice学习笔记六，SOAP, REST and XML-RPC报文格式收集</a></li><li><a href="http://www.slideshare.net/ozten/rest-vs-soap-yawn" rel="external nofollow noopener noreferrer" target="_blank">rest-vs-soap</a></li><li><a href="http://www.slideshare.net/trilancer/restful-user-experience-1421793" rel="external nofollow noopener noreferrer" target="_blank">Restful-User-Experience</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;head
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="架构设计" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="web-service" scheme="http://yoursite.com/tags/web-service/"/>
    
      <category term="soa" scheme="http://yoursite.com/tags/soa/"/>
    
      <category term="rpc" scheme="http://yoursite.com/tags/rpc/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ</title>
    <link href="http://yoursite.com/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E4%B8%AD%E9%97%B4%E4%BB%B6/MQ/activemq/"/>
    <id>http://yoursite.com/技术之路/中间件/MQ/activemq/</id>
    <published>2015-11-07T07:55:00.000Z</published>
    <updated>2017-11-08T16:31:08.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="什么是-activeMQ？"><a href="#什么是-activeMQ？" class="headerlink" title="什么是 activeMQ？"></a>什么是 activeMQ？</h1><p>一个开源消息队列,使用 java 开发,属于 apache 基金会.<br>官方网站:<a href="http://activemq.apache.org" rel="external nofollow noopener noreferrer" target="_blank">http://activemq.apache.org</a><br>官方文档:<a href="http://activemq.apache.org/getting-started.html" rel="external nofollow noopener noreferrer" target="_blank">http://activemq.apache.org/getting-started.html</a></p><h1 id="php-如何和-activeMQ-通信？"><a href="#php-如何和-activeMQ-通信？" class="headerlink" title="php 如何和 activeMQ 通信？"></a>php 如何和 activeMQ 通信？</h1><p>采用 stomp 协议<br>php 安装 stomp 的扩展</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pecl install stomp</span><br></pre></td></tr></table></figure><p>采用第三方的类库:<a href="https://github.com/dejanb/stomp-php" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/dejanb/stomp-php</a></p><h1 id="php-如何监控-activeMQ-中队列的状态？"><a href="#php-如何监控-activeMQ-中队列的状态？" class="headerlink" title="php 如何监控 activeMQ 中队列的状态？"></a>php 如何监控 activeMQ 中队列的状态？</h1><p>activeMQ 需要打开StatisticsPlugin<br>方法:<a href="http://activemq.apache.org/statisticsplugin.html" rel="external nofollow noopener noreferrer" target="_blank">http://activemq.apache.org/statisticsplugin.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取指定队列的待处理消息数量</span><br><span class="line"> *</span><br><span class="line"> * @param string $queue 待查询的队列名</span><br><span class="line"> *</span><br><span class="line"> * @return mixed 成功返回待处理的消息数量</span><br><span class="line"> */</span><br><span class="line">function getMQStatus($queue)</span><br><span class="line">&#123;</span><br><span class="line">    $result = $num = FALSE;</span><br><span class="line">    $statusqueue = &quot;/queue/ActiveMQ.Statistics.Destination.&#123;$queue&#125;&quot;;//固定格式</span><br><span class="line">    //$statusqueue = &quot;/queue/ActiveMQ/Statistics/Destination/&#123;$queue&#125;&quot;;//固定格式</span><br><span class="line"></span><br><span class="line">    //开启ActiveMQ</span><br><span class="line">    $link = stomp_connect(&apos;tcp://192.168.221.129:6161&apos;);//broker 的地址</span><br><span class="line">    if (!$link) &#123;</span><br><span class="line">        die(&quot;Can&apos;t connect MQ !!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (FALSE !== $link) &#123;</span><br><span class="line">        //查询之后的结果存放处</span><br><span class="line">        $resultqueue = &quot;/queue/test_status_&#123;$queue&#125;&quot;;</span><br><span class="line"></span><br><span class="line">        //设定采用JSON格式</span><br><span class="line">        stomp_subscribe($link, $resultqueue, array(&quot;transformation&quot; =&gt; &quot;jms-map-json&quot;));</span><br><span class="line">        //送出空字符串</span><br><span class="line">        $result = stomp_send($link, $statusqueue, &apos;&apos;, array(&quot;reply-to&quot; =&gt; $resultqueue));</span><br><span class="line">        if (FALSE === $result) &#123;</span><br><span class="line">            echo &quot; send error&quot; . PHP_EOL;</span><br><span class="line">        &#125;</span><br><span class="line">        //取得状态</span><br><span class="line">        while (stomp_has_frame($link)) &#123;</span><br><span class="line">            $frame = stomp_read_frame($link);</span><br><span class="line"></span><br><span class="line">            if (FALSE != $frame) &#123;</span><br><span class="line">                stomp_ack($link, $frame[&apos;headers&apos;][&apos;message-id&apos;]);</span><br><span class="line">                $obj = json_decode($frame[&apos;body&apos;], TRUE);//$obj 包含队列的所有信息</span><br><span class="line">                //print_r($obj);</span><br><span class="line">                //取得目前数量（尚可取得其他状态）</span><br><span class="line">                foreach ($obj[&apos;map&apos;][&apos;entry&apos;] as $pitem) &#123;</span><br><span class="line">                    if (&apos;size&apos; == $pitem[&apos;string&apos;]) &#123;</span><br><span class="line">                        $num = $pitem[&apos;long&apos;];</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stomp_unsubscribe($link, $resultqueue);</span><br><span class="line">        stomp_close($link);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$num = getMQStatus(&apos;spider&apos;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;什么是-activeMQ？&quot;&gt;&lt;a href=&quot;#什么是-acti
      
    
    </summary>
    
      <category term="技术之路" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="中间件" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
      <category term="MQ" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E8%B7%AF/%E4%B8%AD%E9%97%B4%E4%BB%B6/MQ/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="MQ" scheme="http://yoursite.com/tags/MQ/"/>
    
      <category term="activeMQ" scheme="http://yoursite.com/tags/activeMQ/"/>
    
  </entry>
  
</feed>
